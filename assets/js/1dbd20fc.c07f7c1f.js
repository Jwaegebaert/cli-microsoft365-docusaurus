"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[38224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>b});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},i=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,b=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return r?a.createElement(b,s(s({ref:t},i),{},{components:r})):a.createElement(b,s({ref:t},i))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[m]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(67294),n=r(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:r,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,s),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>w});var a=r(87462),n=r(67294),o=r(86010),s=r(12466),l=r(56697),u=r(91980),c=r(67392),i=r(50012);function m(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}function p(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??m(r);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:r}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,u._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,o=p(e),[s,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[u,c]=b({queryString:r,groupId:a}),[m,f]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,i.Nk)(r);return[a,(0,n.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:a}),h=(()=>{const e=u??m;return d({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var h=r(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:r,selectedValue:l,selectValue:u,tabValues:c}=e;const i=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.o5)(),p=e=>{const t=e.currentTarget,r=i.indexOf(t),a=c[r].value;a!==l&&(m(t),u(a))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;t=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;t=i[r]??i[i.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},c.map((e=>{let{value:t,label:r,attributes:s}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>i.push(e),onKeyDown:d,onClick:p},s,{className:(0,o.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":l===t})}),r??t)})))}function v(e){let{lazy:t,children:r,selectedValue:a}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function $(e){const t=f(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},n.createElement(y,(0,a.Z)({},e,t)),n.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return n.createElement($,(0,a.Z)({key:String(t)},e))}},17076:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=r(87462),n=(r(67294),r(3905)),o=r(74866),s=r(85162);const l={tags:["reports","security","teams","users"]},u="Govern orphaned Microsoft Teams",c={unversionedId:"sample-scripts/teams/govern-orphan-teams/index",id:"sample-scripts/teams/govern-orphan-teams/index",title:"Govern orphaned Microsoft Teams",description:"Author: Matti Paukkonen",source:"@site/docs/sample-scripts/teams/govern-orphan-teams/index.mdx",sourceDirName:"sample-scripts/teams/govern-orphan-teams",slug:"/sample-scripts/teams/govern-orphan-teams/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/govern-orphan-teams/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/teams/govern-orphan-teams/index.mdx",tags:[{label:"reports",permalink:"/cli-microsoft365-docusaurus/tags/reports"},{label:"security",permalink:"/cli-microsoft365-docusaurus/tags/security"},{label:"teams",permalink:"/cli-microsoft365-docusaurus/tags/teams"},{label:"users",permalink:"/cli-microsoft365-docusaurus/tags/users"}],version:"current",lastUpdatedAt:1683143859,formattedLastUpdatedAt:"May 3, 2023",frontMatter:{tags:["reports","security","teams","users"]},sidebar:"sampleScripts",previous:{title:"Get all the Teams a specific user is part of",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/get-all-teams-specific-user-is-part-of/"},next:{title:"Deploy Microsoft Teams personal app and add it to users",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/install-personal-app/"}},i={},m=[],p={toc:m},d="wrapper";function b(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"govern-orphaned-microsoft-teams"},"Govern orphaned Microsoft Teams"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://mattipaukkonen.com/2019/10/09/govern-orphaned-teams-with-powershell/"},"Matti Paukkonen")),(0,n.kt)("p",null,"Every team needs an owner, at least one. Common best practice is that you should have at least two users in owner role. Teams is not allowing the last owner to leave the team, but there might occasions when last owner is removed, example when people are leaving the organization and account gets deleted. This script finds those teams that no longer have an owner."),(0,n.kt)(o.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"PowerShell",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'$availableTeams = m365 teams team list -o json | ConvertFrom-Json\n$teams = @()\nforeach ($team in $availableTeams) {\n\n    Write-host "Handling team: " -NoNewline -ForegroundColor Yellow\n    Write-host $team.DisplayName -ForegroundColor Yellow\n    $group = m365 aad o365group get --id $team.id -o json | ConvertFrom-Json\n    $users = m365 teams user list --teamId $team.id -o json | ConvertFrom-Json\n    $owners = @($users | Where-Object { $_.userType -eq "Owner" })\n    $members = @($users | Where-Object { $_.userType -eq "Member" }).Length\n    $guests = @($users | Where-Object { $_.userType -eq "Guest" }).Length\n\n    $teamObject = New-Object -TypeName PSObject\n    $teamObject | Add-Member -MemberType NoteProperty -Name DisplayName -Value $team.displayName\n    $teamObject | Add-Member -MemberType NoteProperty -Name Alias -Value $group.mailNickName\n    $teamObject | Add-Member -MemberType NoteProperty -Name "Number of Owners" -Value $owners.Length\n    $teamObject | Add-Member -MemberType NoteProperty -Name "Number of Members" -Value $members\n    $teamObject | Add-Member -MemberType NoteProperty -Name "Number of Guests" -Value $guests\n    if ($owners.Count -eq 1) {\n        $teamObject | Add-Member -MemberType NoteProperty -Name "Owner" -Value $owners[0].displayName\n    }\n\n    write-host " ...Done" -ForegroundColor Green\n    $teams += $teamObject\n}\n\n$teams | Format-Table -AutoSize\n'))),(0,n.kt)(s.Z,{value:"Bash",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\n# requires jq: https://stedolan.github.io/jq/\n\ndefaultIFS=$IFS\nIFS=$'\\n'\n\navailableTeams=`m365 teams team list -o json`\nteams=()\n\nfor team in `echo $availableTeams | jq -c '.[]'`; do\n\n    displayName=`echo $team | jq '.displayName'`\n    echo \"Handling team: ${displayName}\"\n\n    teamId=`echo $team | jq '.id'`\n    group=`m365 aad o365group get --id ${teamId} -o json`\n    users=`m365 teams user list --teamId ${teamId} -o json`\n\n    groupId=`echo $team | jq '.id'`\n    alias=`echo $group | jq '.mailNickName'`\n\n    owner=`echo $users | jq -c 'map(select(.userType == \"Owner\")) | .[0]? | .displayName'`\n    ownercount=`echo $users | jq -c 'map(select(.userType == \"Owner\")) | length'`\n    membercount=`echo $users | jq -c 'map(select(.userType == \"Member\")) | length'`\n    guestcount=`echo $users | jq -c 'map(select(.userType == \"Guest\")) | length'`\n\n    teamObject=$(jq -n -c \\\n        --arg dn \"${displayName}\" \\\n        --arg id \"${groupId}\" \\\n        --arg al \"${alias}\" \\\n        --arg oc \"${ownercount}\" \\\n        --arg mc \"${membercount}\" \\\n        --arg gc \"${guestcount}\" \\\n        --arg ow \"${owner}\" \\\n        '{DisplayName: $dn, GroupID: $id, Alias: $al, OwnerCount: $oc, MemberCount: $mc, GuestCount: $gc, Owner: $ow}')\n\n    echo \"...Done\"\n    teams+=($teamObject)\ndone\n\necho ${teams[@]} | jq -csr '(.[0] |keys_unsorted | @tsv), (.[]|.|map(.) |@tsv)' | column -s$'\\t' -t\n\nIFS=defaultIFS\n\nexit 1\n")))))}b.isMDXComponent=!0}}]);