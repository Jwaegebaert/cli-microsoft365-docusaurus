"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[54936],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>f});var r=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),p=c(n),u=o,f=p["".concat(l,".").concat(u)]||p[u]||d[u]||a;return n?r.createElement(f,i(i({ref:e},m),{},{components:n})):r.createElement(f,i({ref:e},m))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6218:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={tags:["attachments","download file","migration"]},i="Download attachments from a SharePoint Online list",s={unversionedId:"sample-scripts/spo/download-attachments-from-list/index",id:"sample-scripts/spo/download-attachments-from-list/index",title:"Download attachments from a SharePoint Online list",description:"Download attachments from a SharePoint Online list.",source:"@site/docs/sample-scripts/spo/download-attachments-from-list/index.md",sourceDirName:"sample-scripts/spo/download-attachments-from-list",slug:"/sample-scripts/spo/download-attachments-from-list/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/download-attachments-from-list/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/download-attachments-from-list/index.md",tags:[{label:"attachments",permalink:"/cli-microsoft365-docusaurus/tags/attachments"},{label:"download file",permalink:"/cli-microsoft365-docusaurus/tags/download-file"},{label:"migration",permalink:"/cli-microsoft365-docusaurus/tags/migration"}],version:"current",lastUpdatedAt:1676718552,formattedLastUpdatedAt:"Feb 18, 2023",frontMatter:{tags:["attachments","download file","migration"]},sidebar:"sampleScripts",previous:{title:"Disable specified Tenant-wide Extension",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/disable-tenant-wide-extension/"},next:{title:"Empty the tenant recycle bin",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/empty-tenant-recyclebin/"}},l={},c=[],m={toc:c},p="wrapper";function d(t){let{components:e,...n}=t;return(0,o.kt)(p,(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"download-attachments-from-a-sharepoint-online-list"},"Download attachments from a SharePoint Online list"),(0,o.kt)("p",null,"Download attachments from a SharePoint Online list."),(0,o.kt)("p",null,'=== "PowerShell"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'```powershell\nparam\n(\n    [Parameter(Mandatory = $true)] [string] $SiteURL,\n    [Parameter(Mandatory = $true)] [string] $ListTitle,\n    [Parameter(Mandatory = $true)] [string] $DownloadDirectory\n)\n\n$m365Status = m365 status\nif ($m365Status -match "Logged Out") {\n  Write-Host "Logging in the User!"\n  m365 login --authType browser\n}\n\nTry {\n\n    #Get All Items from the List\n    $ListItems = m365 spo listitem list --webUrl $SiteURL --listTitle $ListTitle | ConvertFrom-Json\n     \n    #Create download directory if it doesn\'t exist\n    If (!(Test-Path -path $DownloadDirectory)) {           \n        New-Item $DownloadDirectory -type directory         \n    }\n     \n    #Iterate through each list item\n    Foreach ($Item in $ListItems) {\n\n        #Get All attachments from the List Item\n        $Attachments = m365 spo listitem attachment list --webUrl $SiteURL --listTitle $ListTitle --itemId $Item.Id | ConvertFrom-Json\n        foreach ($Attachment in $Attachments) {\n            $TargetFilePath = "$($DownloadDirectory)/$($Item.Id)_$($Attachment.FileName)"\n            #Download attachment\n            m365 spo file get --webUrl $SiteURL --url $Attachment.ServerRelativeUrl --asFile --path $TargetFilePath\n        }\n    }\n\n    write-host  -f Green "List Attachments Downloaded Successfully!"\n}\nCatch {\n    write-host -f Red "Error Downloading List Attachments!" $_.Exception.Message\n}\n```\n')))}d.isMDXComponent=!0}}]);