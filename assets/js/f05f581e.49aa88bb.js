"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[5530],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>f});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),i=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=i(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=i(t),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return t?n.createElement(f,s(s({ref:r},c),{},{components:t})):n.createElement(f,s({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var u={};for(var l in r)hasOwnProperty.call(r,l)&&(u[l]=r[l]);u.originalType=e,u[p]="string"==typeof e?e:a,s[1]=u;for(var i=2;i<o;i++)s[i]=t[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85162:(e,r,t)=>{t.d(r,{Z:()=>s});var n=t(67294),a=t(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:r,hidden:t,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,s),hidden:t},r)}},74866:(e,r,t)=>{t.d(r,{Z:()=>w});var n=t(87462),a=t(67294),o=t(86010),s=t(12466),u=t(56697),l=t(91980),i=t(67392),c=t(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:a}}=e;return{value:r,label:t,attributes:n,default:a}}))}function m(e){const{values:r,children:t}=e;return(0,a.useMemo)((()=>{const e=r??p(t);return function(e){const r=(0,i.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function d(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function f(e){let{queryString:r=!1,groupId:t}=e;const n=(0,u.k6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(n.location.search);r.set(o,e),n.replace({...n.location,search:r.toString()})}),[o,n])]}function g(e){const{defaultValue:r,queryString:t=!1,groupId:n}=e,o=m(e),[s,u]=(0,a.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!d({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:o}))),[l,i]=f({queryString:t,groupId:n}),[p,g]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,o]=(0,c.Nk)(t);return[n,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),b=(()=>{const e=l??p;return d({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),g(e)}),[i,g,o]),tabValues:o}}var b=t(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:r,block:t,selectedValue:u,selectValue:l,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),m=e=>{const r=e.currentTarget,t=c.indexOf(r),n=i[t].value;n!==u&&(p(r),l(n))},d=e=>{let r=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1];break}}r?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},r)},i.map((e=>{let{value:r,label:t,attributes:s}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:u===r?0:-1,"aria-selected":u===r,key:r,ref:e=>c.push(e),onKeyDown:d,onClick:m},s,{className:(0,o.Z)("tabs__item",h.tabItem,s?.className,{"tabs__item--active":u===r})}),t??r)})))}function v(e){let{lazy:r,children:t,selectedValue:n}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==n}))))}function $(e){const r=g(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},a.createElement(y,(0,n.Z)({},e,r)),a.createElement(v,(0,n.Z)({},e,r)))}function w(e){const r=(0,b.Z)();return a.createElement($,(0,n.Z)({key:String(r)},e))}},15807:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>u,metadata:()=>i,toc:()=>p});var n=t(87462),a=(t(67294),t(3905)),o=t(74866),s=t(85162);const u={tags:["cleanup","groups","security","teams","users"]},l="Replace a user's membership in selected Microsoft 365 Groups or Teams",i={unversionedId:"sample-scripts/aad/replace-membership-of-selected-groups/index",id:"sample-scripts/aad/replace-membership-of-selected-groups/index",title:"Replace a user's membership in selected Microsoft 365 Groups or Teams",description:"Inspired by: Alan Eardley, Patrick Lamber",source:"@site/docs/sample-scripts/aad/replace-membership-of-selected-groups/index.mdx",sourceDirName:"sample-scripts/aad/replace-membership-of-selected-groups",slug:"/sample-scripts/aad/replace-membership-of-selected-groups/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/replace-membership-of-selected-groups/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/aad/replace-membership-of-selected-groups/index.mdx",tags:[{label:"cleanup",permalink:"/cli-microsoft365-docusaurus/tags/cleanup"},{label:"groups",permalink:"/cli-microsoft365-docusaurus/tags/groups"},{label:"security",permalink:"/cli-microsoft365-docusaurus/tags/security"},{label:"teams",permalink:"/cli-microsoft365-docusaurus/tags/teams"},{label:"users",permalink:"/cli-microsoft365-docusaurus/tags/users"}],version:"current",lastUpdatedAt:1683143859,formattedLastUpdatedAt:"May 3, 2023",frontMatter:{tags:["cleanup","groups","security","teams","users"]},sidebar:"sampleScripts",previous:{title:"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/manage-group-users/"},next:{title:"Replace an owner in a Microsoft 365 Group or Microsoft Team",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/replace-owner-with-a-different-one/"}},c={},p=[],m={toc:p},d="wrapper";function f(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"replace-a-users-membership-in-selected-microsoft-365-groups-or-teams"},"Replace a user's membership in selected Microsoft 365 Groups or Teams"),(0,a.kt)("p",null,"Inspired by: ",(0,a.kt)("a",{parentName:"p",href:"https://blog.eardley.org.uk/2021/04/managing-teams-movers-and-leavers/"},"Alan Eardley"),", ",(0,a.kt)("a",{parentName:"p",href:"https://www.nubo.eu/Replace-Membership-In-A-Microsoft-Group-Or-Team/"},"Patrick Lamber")),(0,a.kt)("p",null,"This script can be used to replace the membership of a user for a selected list of Groups. It might be useful when a person changes role in an organization or is about to leave it."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"PowerShell",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'$fileInput = "<PUTYOURPATHHERE.csv>"\n$oldUser = "upnOfOldUser"\n$newUser = "upnOfNewUser"\n# Parameters end\n\n$m365Status = m365 status --output text\n\nif ($m365Status -eq "Logged Out") {\n  # Connection to Microsoft 365\n  m365 login\n}\n\n# configure the CLI to output JSON on each execution\nm365 cli config set --key output --value json\nm365 cli config set --key errorOutput --value stdout\nm365 cli config set --key showHelpOnFailure --value false\nm365 cli config set --key printErrorsAsPlainText --value false\n\nfunction Get-CLIValue {\n  [cmdletbinding()]\n  param(\n    [parameter(Mandatory = $true, ValueFromPipeline = $true)]\n    $input\n  )\n    $output = $input | ConvertFrom-Json\n    if ($output.error -ne $null) {\n      throw $output.error\n    }\n    return $output\n}\n\nfunction Replace-Membership {\n  [cmdletbinding()]\n  param(\n    [parameter(Mandatory = $true)]\n    $fileInput ,\n    [parameter(Mandatory = $true)]\n    $oldUser,\n    [parameter(Mandatory = $true)]\n    $newUser\n  )\n  $groupsToProcess = Import-Csv $fileInput \n  $groupsToProcess.id | ForEach-Object {\n    $groupId = $_\n    Write-Host "Processing Group ($groupId)" -ForegroundColor DarkGray -NoNewline\n\n    $group = $null\n    try {\n      $group = m365 aad o365group get --id $groupId | Get-CLIValue \n    }\n    catch {\n      Write-Host\n      Write-Host $_.Exception.Message -ForegroundColor Red\n      return\n    }\n    Write-Host " - $($group.displayName)" -ForegroundColor DarkGray\n\n    $isTeam = $group.resourceProvisioningOptions.Contains("Team");\n\n    $users = $null\n    $users = m365 aad o365group user list --groupId $groupId | Get-CLIValue\n    $users | Where-Object { $_.userPrincipalName -eq $oldUser } | ForEach-Object {\n      $user = $_\n      $isMember = $user.userType -eq "Member"\n      $isOwner = $user.userType -eq "Owner"\n\n      Write-Host "Found $oldUser with $($user.userType.tolower()) rights" -ForegroundColor Green\n\n      # owners must be explicitly added as members if it is a team\n      if ($isMember -or $isTeam) {\n        try {\n          Write-Host "Granting $newUser member rights"\n          m365 aad o365group user add --groupId $groupId --userName $newUser | Get-CLIValue\n        }\n        catch {\n          Write-Host $_.Exception.Message -ForegroundColor White\n        }\n      }\n\n      if ($isOwner) {\n        try {\n          Write-Host "Granting $newUser owner rights"\n          m365 aad o365group user add --groupId $groupId --userName $newUser --role Owner | Get-CLIValue\n        }\n        catch {\n          Write-Host $_.Exception.Message -ForegroundColor White\n        }\n      }\n\n      try {\n        Write-Host "Removing $oldUser..."\n        m365 aad o365group user remove --groupId $groupId --userName $oldUser | Get-CLIValue\n      }\n      catch {\n        Write-Host $_.Exception.Message -ForegroundColor Red\n        continue\n      }\n    }\n  }\n}\n\nReplace-Membership $fileInput $oldUser $newUser\n'))),(0,a.kt)(s.Z,{value:"Input CSV File Format",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"id\n<groupId>\n<groupId>\n<groupId>\n")))))}f.isMDXComponent=!0}}]);