"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[68262],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var s=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},o=Object.keys(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=s.createContext({}),p=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return r?s.createElement(f,i(i({ref:t},u),{},{components:r})):s.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:n,i[1]=a;for(var p=2;p<o;p++)i[p]=r[p];return s.createElement.apply(null,i)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},45171:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var s=r(87462),n=(r(67294),r(3905));const o={tags:["groups","users","security"]},i="Add users to the Associated SharePoint Groups of a site from a CSV File",a={unversionedId:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index",id:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index",title:"Add users to the Associated SharePoint Groups of a site from a CSV File",description:"Author: Arjun Menon",source:"@site/docs/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index.md",sourceDirName:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file",slug:"/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/",permalink:"/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index.md",tags:[{label:"groups",permalink:"/tags/groups"},{label:"users",permalink:"/tags/users"},{label:"security",permalink:"/tags/security"}],version:"current",lastUpdatedBy:"Jwaegebaert",lastUpdatedAt:1672784370,formattedLastUpdatedAt:"Jan 3, 2023",frontMatter:{tags:["groups","users","security"]},sidebar:"sampleScripts",previous:{title:"Add a Site Collection Admin using a csv file",permalink:"/sample-scripts/spo/add-site-collection-admin-using-csv-file/"},next:{title:"Change group membership of all SharePoint Online sites",permalink:"/sample-scripts/spo/change-owner-group-membership/"}},l={},p=[{value:"Script Details",id:"script-details",level:2},{value:"File Format",id:"file-format",level:3},{value:"Permission Level Mapping",id:"permission-level-mapping",level:3},{value:"Complete Script",id:"complete-script",level:2}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"add-users-to-the-associated-sharepoint-groups-of-a-site-from-a-csv-file"},"Add users to the Associated SharePoint Groups of a site from a CSV File"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://arjunumenon.com/add-multiple-users-sharepoint-groups-site/"},"Arjun Menon")),(0,n.kt)("h2",{id:"script-details"},"Script Details"),(0,n.kt)("p",null,"This is a script which adds multiple users to associated SharePoint groups (Owners, Members, Visitors) of a site from a CSV file."),(0,n.kt)("p",null,"Typical use case of the script will be a migration scenario where the contents are migrated, while the permissions are not migrated. In that case you will have a  list of users and its equivalent permission level of the source system. The script sample will read the source permission details from a CSV file and will add the users to the associated SharePoint groups of a site"),(0,n.kt)("h3",{id:"file-format"},"File Format"),(0,n.kt)("p",null,"Below is an example of the format needed for your .csv file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"Username,PermissionLevel\nadelev@contoso.com,Read\nalexw@contoso.com,Owner\nalland@contoso.com,Member\nchristiec@contoso.com,Member\n")),(0,n.kt)("h3",{id:"permission-level-mapping"},"Permission Level Mapping"),(0,n.kt)("p",null,"Permission Level mapping assumptions are given below"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Permission Level"),(0,n.kt)("th",{parentName:"tr",align:null},"Equivalent SharePoint Group"),(0,n.kt)("th",{parentName:"tr",align:null},"Details"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Read"),(0,n.kt)("td",{parentName:"tr",align:null},"Visitors"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Visitors group of the site")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Owner"),(0,n.kt)("td",{parentName:"tr",align:null},"Owners"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Owners group of the site")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Member"),(0,n.kt)("td",{parentName:"tr",align:null},"Member"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Owners group of the site")))),(0,n.kt)("h2",{id:"complete-script"},"Complete Script"),(0,n.kt)("p",null,'=== "PowerShell"'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'```powershell\n#Check the M365 login status for CLI\n$LoginStatus = m365 status --output text\nif($LoginStatus -Match "Logged out"){\n    #Executing login command for CLI\n    m365 login   \n}\n\n#Set the URL of the site where the users need to be added\n$siteURL = "https://aum365.sharepoint.com/sites/M365CLI"\n\n#Getting the Associated Groups for the specific site\n$SiteInformation = m365 spo web get --webUrl $siteURL --withGroups --output json | ConvertFrom-Json\n\n#Importing the Current permission list from CSV. Adding the equivalent SharePoint Group Id to the imported object.\n#Object will be grouped with multiple users with , seperator since CLI supports adding multiple users in a single command\n$GroupedResult = Import-Csv -Path .\\Current-Permission-Migration.csv | Group-Object PermissionLevel | ForEach-Object {\n[PsCustomObject]@{\n    PermissionLevel = $_.Name\n    UsernameValues = $_.Group.Username -join \', \'\n    SPGroupId = switch ($_.Name){\n        "Read" {"$($SiteInformation.AssociatedVisitorGroup.Id)"}#Adding to the default Visitor\'s Group\n        "Member" {"$($SiteInformation.AssociatedMemberGroup.Id)"}#Adding to the default Member\'s Group\n        "Owner" {"$($SiteInformation.AssociatedOwnerGroup.Id)"}#Adding to the default Owner\'s Group\n        default {"$($SiteInformation.AssociatedVisitorGroup.Id)"}\n        }\n    }\n}\n\n#Show the Formatted data table for reference\n$GroupedResult | Format-Table\n\n#Read Grouped Permission level and users and add the users to the SharePoint Groups\nForeach ($PermissionLevel in $GroupedResult) {\n    Write-Host "Adding $($PermissionLevel.PermissionLevel) Permission users to the SharePoint Group ID: $($PermissionLevel.SPGroupId)"\n    #Since the command supports multiple usernames to be added in the single command, script will add users in single command execution\n    m365 spo group user add --webUrl $siteURL --groupId $PermissionLevel.SPGroupId --userName $PermissionLevel.UsernameValues\n}\n```\n')))}d.isMDXComponent=!0}}]);