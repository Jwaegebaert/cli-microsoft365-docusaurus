"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[15207],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=u(r),m=o,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[c]="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},37126:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const s={tags:["cleanup","groups","sites"]},i="Delete all Microsoft 365 groups and SharePoint sites",a={unversionedId:"sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/index",id:"sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/index",title:"Delete all Microsoft 365 groups and SharePoint sites",description:"Author: Patrick Lamber",source:"@site/docs/sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/index.md",sourceDirName:"sample-scripts/aad/delete-m365-groups-and-sharepoint-sites",slug:"/sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/index.md",tags:[{label:"cleanup",permalink:"/cli-microsoft365-docusaurus/tags/cleanup"},{label:"groups",permalink:"/cli-microsoft365-docusaurus/tags/groups"},{label:"sites",permalink:"/cli-microsoft365-docusaurus/tags/sites"}],version:"current",lastUpdatedAt:1671570658,formattedLastUpdatedAt:"Dec 20, 2022",frontMatter:{tags:["cleanup","groups","sites"]},sidebar:"sampleScripts",previous:{title:"Delete all Microsoft 365 groups",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/delete-m365-groups/"},next:{title:"Scan for Microsoft 365 Groups created with user's first or last name",permalink:"/cli-microsoft365-docusaurus/sample-scripts/aad/flag-groups-with-user-names/"}},l={},u=[],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"delete-all-microsoft-365-groups-and-sharepoint-sites"},"Delete all Microsoft 365 groups and SharePoint sites"),(0,o.kt)("p",null,"Author: ",(0,o.kt)("a",{parentName:"p",href:"https://www.nubo.eu/Delete-All-SPO-Sites-And-M365-Groups/"},"Patrick Lamber")),(0,o.kt)("p",null,"Another example how you can delete all Microsoft 365 Groups and SharePoint Online sites in your development environment."),(0,o.kt)("p",null,'=== "PowerShell"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'```powershell\n### Warning. Use with caution. This script deletes all M365 Groups and SPO Sites in your tenant\n$devAccount = "<putyourupnhereforsecuritycheck>"\n### Deletes the resources from the recyclebin. The CLI does not support this feature yet\n$skipRecycleBin = $true\n\n$m365Status = m365 status --output text\nWrite-Host $m365Status\nif ($m365Status -eq "Logged Out") {\n  # Connection to Microsoft 365\n  m365 login\n  $m365Status = m365 status\n}\n\n# Check added as security measure\nif ($m365Status[0].ToString().IndexOf($devAccount) -eq -1) {\n  Write-Host "The user does not match the target development account. Stopping..." -ForegroundColor Red\n  return;\n}\n\nWrite-host "Retrieving all groups..."\n$allGroups = m365 aad o365group list -o json | ConvertFrom-Json\n$groupCount = $allGroups.Count\n\nWrite-Host "Processing $groupCount sites..."\n#Loop through each site\n$groupCounter = 0\n\nforeach ($group in $allGroups) {\n  $groupCounter++\n  Write-Host "Deleting $($group.displayName)... ($groupCounter/$groupCount)"\n  m365 aad o365group remove --id $group.id --confirm $true\n}\n\nWrite-host "Retrieving all SPO sites..."\n$allSites = m365 spo site list --query "[?contains(Template,\'SITEPAGEPUBLISHING\') || contains(Template,\'STS\')]" | ConvertFrom-Json\n$siteCount = $allSites.Count\n\nWrite-Host "Processing $siteCount sites..."\n#Loop through each site\n$siteCounter = 0\n\nforeach ($site in $allSites) {\n  $siteCounter++\n  Write-Host "Deleting $($site.Url)... ($siteCounter/$siteCount)"\n  m365 spo site remove --url $site.Url --skipRecycleBin $skipRecycleBin --confirm $true\n}\n```\n')))}d.isMDXComponent=!0}}]);