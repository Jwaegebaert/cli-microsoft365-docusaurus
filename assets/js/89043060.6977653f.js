"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[92733],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),d=s,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(67294),s=r(86010);const a={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(a.tabItem,o),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>q});var n=r(87462),s=r(67294),a=r(86010),o=r(12466),i=r(56697),l=r(91980),u=r(67392),c=r(50012);function p(e){return function(e){return s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:s}}=e;return{value:t,label:r,attributes:n,default:s}}))}function m(e){const{values:t,children:r}=e;return(0,s.useMemo)((()=>{const e=t??p(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,i.k6)(),a=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l._X)(a),(0,s.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})}),[a,n])]}function h(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,a=m(e),[o,i]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:a}))),[l,u]=f({queryString:r,groupId:n}),[p,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,a]=(0,c.Nk)(r);return[n,(0,s.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:n}),b=(()=>{const e=l??p;return d({value:e,tabValues:a})?e:null})();(0,s.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,a]),tabValues:a}}var b=r(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:r,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,r=c.indexOf(t),n=u[r].value;n!==i&&(p(t),l(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":r},t)},u.map((e=>{let{value:t,label:r,attributes:o}=e;return s.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},o,{className:(0,a.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":i===t})}),r??t)})))}function y(e){let{lazy:t,children:r,selectedValue:n}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===n));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=h(e);return s.createElement("div",{className:(0,a.Z)("tabs-container",v.tabList)},s.createElement(g,(0,n.Z)({},e,t)),s.createElement(y,(0,n.Z)({},e,t)))}function q(e){const t=(0,b.Z)();return s.createElement(k,(0,n.Z)({key:String(t)},e))}},9026:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var n=r(87462),s=(r(67294),r(3905)),a=r(74866),o=r(85162);const i={tags:["cleanup","security"]},l="Remove pending SharePoint API permission requests",u={unversionedId:"sample-scripts/spo/remove-pending-api-permission-requests/index",id:"sample-scripts/spo/remove-pending-api-permission-requests/index",title:"Remove pending SharePoint API permission requests",description:"Author: Waldek Mastykarz",source:"@site/docs/sample-scripts/spo/remove-pending-api-permission-requests/index.mdx",sourceDirName:"sample-scripts/spo/remove-pending-api-permission-requests",slug:"/sample-scripts/spo/remove-pending-api-permission-requests/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/remove-pending-api-permission-requests/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/remove-pending-api-permission-requests/index.mdx",tags:[{label:"cleanup",permalink:"/cli-microsoft365-docusaurus/tags/cleanup"},{label:"security",permalink:"/cli-microsoft365-docusaurus/tags/security"}],version:"current",lastUpdatedAt:1685025201,formattedLastUpdatedAt:"May 25, 2023",frontMatter:{tags:["cleanup","security"]},sidebar:"sampleScripts",previous:{title:"Remove orphaned redirect sites",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/remove-orphaned-redirect-sites/"},next:{title:"Remove a Site Collection Admin User from all Site Collections",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/remove-siteCollection-admin-user/"}},c={},p=[],m={toc:p},d="wrapper";function f(e){let{components:t,...r}=e;return(0,s.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"remove-pending-sharepoint-api-permission-requests"},"Remove pending SharePoint API permission requests"),(0,s.kt)("p",null,"Author: ",(0,s.kt)("a",{parentName:"p",href:"https://blog.mastykarz.nl/sample-script-quickly-remove-pending-sharepoint-api-permission-requests/"},"Waldek Mastykarz")),(0,s.kt)("p",null,"When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory,  you'll easily end up with many pending permission requests."),(0,s.kt)("p",null,"This script helps you to quickly remove pending SharePoint API permission requests."),(0,s.kt)(a.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JavaScript (Google zx)",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"#!/usr/bin/env zx\n$.verbose = false;\n\nconsole.log('Retrieving permission requests...');\nconst permissionRequests = JSON.parse(await $`m365 spo serviceprincipal permissionrequest list -o json`);\n\nfor (let i = 0; i < permissionRequests.length; i++) {\n  const request = permissionRequests[i];\n  console.log(`Removing request ${request.Resource}/${request.Scope} (${request.Id})...`);\n  try {\n    await $`m365 spo serviceprincipal permissionrequest deny --id ${request.Id}`\n    console.log(chalk.green('DONE'));\n  }\n  catch (err) {\n    console.error(err.stderr);\n  }\n}\n")))),(0,s.kt)("p",null,"Using ",(0,s.kt)("a",{parentName:"p",href:"https://aka.ms/cli-m365"},"CLI for Microsoft 365"),", the script first retrieves the list of pending SharePoint API permission requests. Then, it iterates through the requests and removes (denies) each one of them using CLI for Microsoft 365. After running this script, your list of pending SharePoint API permission requests will be empty."),(0,s.kt)("p",null,"This script uses ",(0,s.kt)("a",{parentName:"p",href:"https://aka.ms/cli-m365"},"CLI for Microsoft 365")," and ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/google/zx"},"Google zx"),"."),(0,s.kt)("p",null,"To run the script, save it to a file with the ",(0,s.kt)("inlineCode",{parentName:"p"},".mjs")," extension. Next, run the script either by calling ",(0,s.kt)("inlineCode",{parentName:"p"},"zx remove-permissionrequests.mjs")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"./remove-permissionrequests.mjs")," after making the script executable using ",(0,s.kt)("inlineCode",{parentName:"p"},"chmod +x ./remove-permissionrequests.mjs;")))}f.isMDXComponent=!0}}]);