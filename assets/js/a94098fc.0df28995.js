"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46954],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var s=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},i=Object.keys(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=s.createContext({}),c=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?s.createElement(f,a(a({ref:t},p),{},{components:r})):s.createElement(f,a({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return s.createElement.apply(null,a)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80493:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=r(87462),n=(r(67294),r(3905));const i={tags:["lists","provisioning"]},a="Ensure the Site Assets Library is created",o={unversionedId:"sample-scripts/spo/ensure-siteassets-library/index",id:"sample-scripts/spo/ensure-siteassets-library/index",title:"Ensure the Site Assets Library is created",description:"Author: Phillip Allan-Harding",source:"@site/docs/sample-scripts/spo/ensure-siteassets-library/index.md",sourceDirName:"sample-scripts/spo/ensure-siteassets-library",slug:"/sample-scripts/spo/ensure-siteassets-library/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/ensure-siteassets-library/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/ensure-siteassets-library/index.md",tags:[{label:"lists",permalink:"/cli-microsoft365-docusaurus/tags/lists"},{label:"provisioning",permalink:"/cli-microsoft365-docusaurus/tags/provisioning"}],version:"current",lastUpdatedAt:1672784370,formattedLastUpdatedAt:"Jan 3, 2023",frontMatter:{tags:["lists","provisioning"]},sidebar:"sampleScripts",previous:{title:"Empty the tenant recycle bin",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/empty-tenant-recyclebin/"},next:{title:"Export Configurations of Tenant Wide Extensions",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/export-configs-tenant-wide-extensions/"}},l={},c=[],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ensure-the-site-assets-library-is-created"},"Ensure the Site Assets Library is created"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/phillipharding/"},"Phillip Allan-Harding")),(0,n.kt)("p",null,"There are occasions when creating a new modern SharePoint site using the CLI/REST API that the Site Assets library isn't created, use this script to ensure that the Site Assets library is created."),(0,n.kt)("p",null,"Reference: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pnp/cli-microsoft365/discussions/1427"},"'ensure' commands #1427")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"gets the collection of lists at the site url supplied"),(0,n.kt)("li",{parentName:"ul"},'if a list with the title "Site Assets" isn\'t found',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"gets an access token for the tenant's SharePoint resource"),(0,n.kt)("li",{parentName:"ul"},"calls the _api/web/Lists/EnsureSiteAssetsLibrary REST endpoint to create the Site Assets library"))),(0,n.kt)("li",{parentName:"ul"},"returns the existing or created SPList as a JSON object")),(0,n.kt)("p",null,'=== "PowerShell"'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'```powershell\nfunction EnsureSiteAssetsLibrary {\n  param (\n    [Parameter(Mandatory)][string]$siteUrl\n  )\n\n  <#\n    send a HTTP POST request to:\n    https://<tenant>.sharepoint.com/sites/<sitename>/_api/web/Lists/EnsureSiteAssetsLibrary/\n    which returns an SPList\n  #>\n  Write-Host "-> Ensure Site Assets library: $siteUrl"\n  $list = m365 spo list get --webUrl $siteUrl --title "Site Assets" | ConvertFrom-Json\n  \n  if ($null -eq $list) {\n    Write-Host "...Creating Site Assets library"\n\n    try {\n      $resource = ($siteUrl -split "/")[2]\n      $accessToken = m365 util accesstoken get --resource "https://$resource" --output text\n    }\n    catch {\n      throw "!! Unable to get AccessToken for EnsureSiteAssetsLibrary at \'$siteUrl\'`nERROR: $_"\n    }\n    try {\n      $headers = @{ "Authorization" = "Bearer $accessToken"; "Accept" = "application/json;odata=nometadata" }\n      $endpoint = "$siteUrl/_api/web/Lists/EnsureSiteAssetsLibrary/"\n      $response = (Invoke-RestMethod -Uri $endpoint -Headers $headers -Method POST)\n      $list = $response\n\n      Write-Host "...Created: $($list.Id)"\n    }\n    catch {\n      throw "!! Unable to EnsureSiteAssetsLibrary at \'$siteUrl\'`nERROR: $_"\n    }\n  } else {\n    Write-Host "...Already exists: $($list.Id)"\n  }\n\n  $list\n}\n```\n')))}u.isMDXComponent=!0}}]);