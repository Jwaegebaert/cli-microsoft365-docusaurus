"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[67706],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,f=p["".concat(o,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294),i=n(86010);const s={tabItem:"tabItem_Ymn6"};function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(s.tabItem,a),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>S});var r=n(87462),i=n(67294),s=n(86010),a=n(12466),l=n(56697),o=n(91980),u=n(67392),c=n(50012);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o._X)(s),(0,i.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=d(e),[a,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[o,u]=f({queryString:n,groupId:r}),[p,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,i.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),y=(()=>{const e=o??p;return m({value:e,tabValues:s})?e:null})();(0,i.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var y=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:n,selectedValue:l,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,a.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==l&&(p(t),o(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:a}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},a,{className:(0,s.Z)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function T(e){const t=b(e);return i.createElement("div",{className:(0,s.Z)("tabs-container",g.tabList)},i.createElement(h,(0,r.Z)({},e,t)),i.createElement(v,(0,r.Z)({},e,t)))}function S(e){const t=(0,y.Z)();return i.createElement(T,(0,r.Z)({key:String(t)},e))}},81323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=n(87462),i=(n(67294),n(3905)),s=n(74866),a=n(85162);const l={tags:["provisioning","libraries"]},o="Add multiple lists in multiple sites",u={unversionedId:"sample-scripts/spo/add-multiple-lists-in-multiple-sites/index",id:"sample-scripts/spo/add-multiple-lists-in-multiple-sites/index",title:"Add multiple lists in multiple sites",description:"Author: Sudharsan Kesavanarayanan",source:"@site/docs/sample-scripts/spo/add-multiple-lists-in-multiple-sites/index.mdx",sourceDirName:"sample-scripts/spo/add-multiple-lists-in-multiple-sites",slug:"/sample-scripts/spo/add-multiple-lists-in-multiple-sites/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/add-multiple-lists-in-multiple-sites/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/add-multiple-lists-in-multiple-sites/index.mdx",tags:[{label:"provisioning",permalink:"/cli-microsoft365-docusaurus/tags/provisioning"},{label:"libraries",permalink:"/cli-microsoft365-docusaurus/tags/libraries"}],version:"current",lastUpdatedAt:1685025201,formattedLastUpdatedAt:"May 25, 2023",frontMatter:{tags:["provisioning","libraries"]},sidebar:"sampleScripts",previous:{title:"Add multiple folders in libraries using a csv file",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/add-multiple-folders-in-libraries-using-csv-file/"},next:{title:"Add a Site Collection Admin using a csv file",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/add-site-collection-admin-using-csv-file/"}},c={},p=[],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"add-multiple-lists-in-multiple-sites"},"Add multiple lists in multiple sites"),(0,i.kt)("p",null,"Author: ",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/sudharsank"},"Sudharsan Kesavanarayanan")),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(a.Z,{value:"PowerShell",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},'<#\n.SYNOPSIS\n    Create multiple lists in multiple sites.\n.DESCRIPTION\n    Create multiple lists in multiple sites and also to map the content type.\n.EXAMPLE\n    PS C:\\> Add-ListsAndMapContentTypes -SiteUrls "/Sites/Site1", "/Sites/Site2" -Lists "List1", "List2"\n.INPUTS\n    Inputs (if any)\n.OUTPUTS\n    Output (if any)\n.NOTES\n    Below are the 2 global variables that have to be updated\n    $weburl = "https://tenantname.sharepoint.com"\n    $ContentTypeId = \'<content type id>\'\n#>\n$weburl = "https://tenantname.sharepoint.com"\n$ContentTypeId = \'<content type id>\'\n\nfunction Add-ListsAndMapContentTypes (\n  [Parameter(Mandatory = $true)][string[]] $SiteUrls,\n  [Parameter(Mandatory = $true)][string[]] $Lists \n) {\n  $SiteUrls | ForEach-Object {\n    [string]$FinalSiteUrl = $weburl + $_.ToString()\n    Write-Output "Started creating lists for \'$FinalSiteUrl\'"\n    Write-Output ""\n    $Lists | ForEach-Object {\n      [string]$listTitle = $_.ToString()\n      Write-Output "Checking and creating list \'$listTitle\'"\n      $list = m365 spo list get -u $FinalSiteUrl -t $listTitle -o \'json\' | ConvertFrom-Json\n      if ($null -eq $list) {\n        m365 spo list add -t $listTitle --baseTemplate DocumentLibrary -u $FinalSiteUrl --contentTypesEnabled true --enableVersioning true --listExperienceOptions 1 --onQuickLaunch false \n        $list = m365 spo list get -t $listTitle -u $FinalSiteUrl --properties "Title,Id" --output \'json\' | ConvertFrom-Json\n        m365 spo list contenttype add -l $list.Id -u $FinalSiteUrl -i $ContentTypeId --output \'json\' | ConvertFrom-Json\n        $listContentType = m365 spo list contenttype list -l $list.Id -u $FinalSiteUrl --output \'json\' | ConvertFrom-Json\n        m365 spo list contenttype default set -l $list.Id -u $FinalSiteUrl -c $listContentType.StringId[2] --output \'json\' | ConvertFrom-Json\n        Write-Output "Successfully created list \'$listTitle\'"\n      }\n      else {\n        Write-Output "List \'$listTitle\' already exists"\n      }\n      Write-Output "----------------------"\n    }\n    Write-Output ""\n  }\n}\n\nWrite-Host "Ensure logged in"\n$m365Status = m365 status --output text\nif ($m365Status -eq "Logged Out") {\n  Write-Host "Logging in the User!"\n  m365 login --authType browser\n}\n')))))}f.isMDXComponent=!0}}]);