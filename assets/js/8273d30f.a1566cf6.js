"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[10266],{3905:(t,o,e)=>{e.d(o,{Zo:()=>l,kt:()=>m});var u=e(67294);function r(t,o,e){return o in t?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e,t}function a(t,o){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);o&&(u=u.filter((function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable}))),e.push.apply(e,u)}return e}function n(t){for(var o=1;o<arguments.length;o++){var e=null!=arguments[o]?arguments[o]:{};o%2?a(Object(e),!0).forEach((function(o){r(t,o,e[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(o){Object.defineProperty(t,o,Object.getOwnPropertyDescriptor(e,o))}))}return t}function i(t,o){if(null==t)return{};var e,u,r=function(t,o){if(null==t)return{};var e,u,r={},a=Object.keys(t);for(u=0;u<a.length;u++)e=a[u],o.indexOf(e)>=0||(r[e]=t[e]);return r}(t,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(u=0;u<a.length;u++)e=a[u],o.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var s=u.createContext({}),q=function(t){var o=u.useContext(s),e=o;return t&&(e="function"==typeof t?t(o):n(n({},o),t)),e},l=function(t){var o=q(t.components);return u.createElement(s.Provider,{value:o},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var o=t.children;return u.createElement(u.Fragment,{},o)}},c=u.forwardRef((function(t,o){var e=t.components,r=t.mdxType,a=t.originalType,s=t.parentName,l=i(t,["components","mdxType","originalType","parentName"]),p=q(e),c=r,m=p["".concat(s,".").concat(c)]||p[c]||d[c]||a;return e?u.createElement(m,n(n({ref:o},l),{},{components:e})):u.createElement(m,n({ref:o},l))}));function m(t,o){var e=arguments,r=o&&o.mdxType;if("string"==typeof t||r){var a=e.length,n=new Array(a);n[0]=c;var i={};for(var s in o)hasOwnProperty.call(o,s)&&(i[s]=o[s]);i.originalType=t,i[p]="string"==typeof t?t:r,n[1]=i;for(var q=2;q<a;q++)n[q]=e[q];return u.createElement.apply(null,n)}return u.createElement.apply(null,e)}c.displayName="MDXCreateElement"},85162:(t,o,e)=>{e.d(o,{Z:()=>n});var u=e(67294),r=e(86010);const a={tabItem:"tabItem_Ymn6"};function n(t){let{children:o,hidden:e,className:n}=t;return u.createElement("div",{role:"tabpanel",className:(0,r.Z)(a.tabItem,n),hidden:e},o)}},74866:(t,o,e)=>{e.d(o,{Z:()=>T});var u=e(87462),r=e(67294),a=e(86010),n=e(12466),i=e(56697),s=e(91980),q=e(67392),l=e(50012);function p(t){return function(t){return r.Children.map(t,(t=>{if(!t||(0,r.isValidElement)(t)&&function(t){const{props:o}=t;return!!o&&"object"==typeof o&&"value"in o}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:o,label:e,attributes:u,default:r}}=t;return{value:o,label:e,attributes:u,default:r}}))}function d(t){const{values:o,children:e}=t;return(0,r.useMemo)((()=>{const t=o??p(e);return function(t){const o=(0,q.l)(t,((t,o)=>t.value===o.value));if(o.length>0)throw new Error(`Docusaurus error: Duplicate values "${o.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[o,e])}function c(t){let{value:o,tabValues:e}=t;return e.some((t=>t.value===o))}function m(t){let{queryString:o=!1,groupId:e}=t;const u=(0,i.k6)(),a=function(t){let{queryString:o=!1,groupId:e}=t;if("string"==typeof o)return o;if(!1===o)return null;if(!0===o&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:o,groupId:e});return[(0,s._X)(a),(0,r.useCallback)((t=>{if(!a)return;const o=new URLSearchParams(u.location.search);o.set(a,t),u.replace({...u.location,search:o.toString()})}),[a,u])]}function f(t){const{defaultValue:o,queryString:e=!1,groupId:u}=t,a=d(t),[n,i]=(0,r.useState)((()=>function(t){let{defaultValue:o,tabValues:e}=t;if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(o){if(!c({value:o,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${o}" but none of its children has the corresponding value. Available values are: ${e.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return o}const u=e.find((t=>t.default))??e[0];if(!u)throw new Error("Unexpected error: 0 tabValues");return u.value}({defaultValue:o,tabValues:a}))),[s,q]=m({queryString:e,groupId:u}),[p,f]=function(t){let{groupId:o}=t;const e=function(t){return t?`docusaurus.tab.${t}`:null}(o),[u,a]=(0,l.Nk)(e);return[u,(0,r.useCallback)((t=>{e&&a.set(t)}),[e,a])]}({groupId:u}),b=(()=>{const t=s??p;return c({value:t,tabValues:a})?t:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:n,selectValue:(0,r.useCallback)((t=>{if(!c({value:t,tabValues:a}))throw new Error(`Can't select invalid tab value=${t}`);i(t),q(t),f(t)}),[q,f,a]),tabValues:a}}var b=e(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(t){let{className:o,block:e,selectedValue:i,selectValue:s,tabValues:q}=t;const l=[],{blockElementScrollPositionUntilNextRender:p}=(0,n.o5)(),d=t=>{const o=t.currentTarget,e=l.indexOf(o),u=q[e].value;u!==i&&(p(o),s(u))},c=t=>{let o=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{const e=l.indexOf(t.currentTarget)+1;o=l[e]??l[0];break}case"ArrowLeft":{const e=l.indexOf(t.currentTarget)-1;o=l[e]??l[l.length-1];break}}o?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":e},o)},q.map((t=>{let{value:o,label:e,attributes:n}=t;return r.createElement("li",(0,u.Z)({role:"tab",tabIndex:i===o?0:-1,"aria-selected":i===o,key:o,ref:t=>l.push(t),onKeyDown:c,onClick:d},n,{className:(0,a.Z)("tabs__item",g.tabItem,n?.className,{"tabs__item--active":i===o})}),e??o)})))}function $(t){let{lazy:o,children:e,selectedValue:u}=t;const a=(Array.isArray(e)?e:[e]).filter(Boolean);if(o){const t=a.find((t=>t.props.value===u));return t?(0,r.cloneElement)(t,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((t,o)=>(0,r.cloneElement)(t,{key:o,hidden:t.props.value!==u}))))}function y(t){const o=f(t);return r.createElement("div",{className:(0,a.Z)("tabs-container",g.tabList)},r.createElement(h,(0,u.Z)({},t,o)),r.createElement($,(0,u.Z)({},t,o)))}function T(t){const o=(0,b.Z)();return r.createElement(y,(0,u.Z)({key:String(o)},t))}},68925:(t,o,e)=>{e.r(o),e.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>q,toc:()=>p});var u=e(87462),r=(e(67294),e(3905)),a=e(74866),n=e(85162);const i={tags:["lists","migration","tasks"]},s="Planner migration to SharePoint list",q={unversionedId:"sample-scripts/spo/planner-migrate-sharepoint-list/index",id:"sample-scripts/spo/planner-migrate-sharepoint-list/index",title:"Planner migration to SharePoint list",description:"Author: Albert-Jan Schot",source:"@site/docs/sample-scripts/spo/planner-migrate-sharepoint-list/index.mdx",sourceDirName:"sample-scripts/spo/planner-migrate-sharepoint-list",slug:"/sample-scripts/spo/planner-migrate-sharepoint-list/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/planner-migrate-sharepoint-list/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/planner-migrate-sharepoint-list/index.mdx",tags:[{label:"lists",permalink:"/cli-microsoft365-docusaurus/tags/lists"},{label:"migration",permalink:"/cli-microsoft365-docusaurus/tags/migration"},{label:"tasks",permalink:"/cli-microsoft365-docusaurus/tags/tasks"}],version:"current",lastUpdatedAt:1685107590,formattedLastUpdatedAt:"May 26, 2023",frontMatter:{tags:["lists","migration","tasks"]},sidebar:"sampleScripts",previous:{title:"Monitor Site Collections Storage Usage",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/monitor-site-collection-storage-usage/"},next:{title:"Remove SharePoint API permissions",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/remove-api-permissions/"}},l={},p=[],d={toc:p},c="wrapper";function m(t){let{components:o,...e}=t;return(0,r.kt)(c,(0,u.Z)({},d,e,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"planner-migration-to-sharepoint-list"},"Planner migration to SharePoint list"),(0,r.kt)("p",null,"Author: ",(0,r.kt)("a",{parentName:"p",href:"https://www.cloudappie.nl/migrate-planner-plan-list-climicrosoft365/"},"Albert-Jan Schot")),(0,r.kt)("p",null,"Use the CLI for Microsoft 365 to migrate an existing plan to a SharePoint Online List with this sample. You can specify the planner plan that you want to migrate and the script will generate a new list for you with the required fields and views. The current sample does migrate all tasks however it skips the following information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Categories"),(0,r.kt)("li",{parentName:"ul"},"Comments made on tasks"),(0,r.kt)("li",{parentName:"ul"},"Attachments")),(0,r.kt)(a.Z,{mdxType:"Tabs"},(0,r.kt)(n.Z,{value:"PowerShell",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'param (\n    [Parameter(Mandatory = $true, HelpMessage = "URL of the target site", Position = 0)]\n    [string]$SiteUrl,\n    [Parameter(Mandatory = $true, HelpMessage = "Groupname or Planner Plan name", Position = 1)]\n    [string]$PlanGroupName,\n    [Parameter(HelpMessage = "Show progress messages", Position = 2)]\n    [switch]$ShowProgress,\n    [Parameter(HelpMessage = "Skip List creation (for running multiple migrations without creating the list)", Position = 3)]\n    [switch]$SkipListCreation\n)\n\n$m365Status = m365 status --output text\n\nif ($m365Status -match "Logged Out") {\n    # Connection to Microsoft 365\n    m365 login\n}\n\n$plans = m365 planner plan list --ownerGroupName $PlanGroupName | ConvertFrom-Json\nWrite-Host "Found $($plans.length) plans to migrate"\n\nforeach ($plan in $plans) {\n    $migrationTasks = @()\n    $plannerBuckets = m365 planner bucket list --planId $plan.id | ConvertFrom-Json\n    $plannerTasks = m365 planner task list --planId $plan.id | ConvertFrom-Json\n\n    foreach ($task in $plannerTasks) {\n        $taskDetails = m365 planner task get --id $task.id --query \'{description: description, checklist: checklist.*.{isChecked: isChecked, title: title} }\' | ConvertFrom-Json\n\n        $assignedUsers = @()\n        foreach ($userId in $($task.assignments | ForEach-Object { $($_).PSObject.Properties.Name })) {\n            $assignedUsers += "{\'Key\':\'i:0#.f|membership|$(m365 aad user get --id $userId --query "userPrincipalName" | ConvertFrom-Json)\'}"\n        }\n\n        $checklist = $null;\n\n        foreach ($item in $taskDetails.checklist) {\n            if ($item.isChecked) {\n                $checklist += "[x] " + $item.title + "<br>";\n            }\n            else {\n                $checklist += "[ ] " + $item.title + "<br>";\n            }\n        }\n\n        $migrationTasks += [pscustomobject][ordered]@{\n            Title       = $task.title\n            Bucket      = ($plannerBuckets | Where-Object { $_.id -eq $task.bucketId }).Name\n            Progress    = $task.percentComplete\n            Priority    = $task.priority\n            Description = ($task.hasDescription ? $taskDetails.description : \' \')\n            StartDate   = $task.startDateTime\n            DueDate     = $task.dueDateTime\n            Checklist   = $checklist\n            AssignedTo  = $($assignedUsers ? "[$($assignedUsers -join ",")]" : $null)\n        }\n    }\n\n    Write-Host "`nFound $($plannerBuckets.length) buckets and $($plannerTasks.length) tasks to migrate for the plan $($plan.title)"\n\n    if ($plannerTasks.length -gt 0) {\n        if ($false -eq $SkipListCreation) {\n            if ($ShowProgress) {\n                Write-Host "Setting up List"\n            }\n\n            $list = m365 spo list add --title $plan.title --baseTemplate GenericList --webUrl $SiteUrl | ConvertFrom-Json\n\n            $bucketOptions = $plannerBuckets.name -join "</CHOICE><CHOICE>"\n            $fieldXml = \'<Field DisplayName=\\"Bucket\\" FillInChoice=\\"FALSE\\" Format=\\"Dropdown\\" IsModern=\\"TRUE\\" Name=\\"Bucket\\" Title=\\"Bucket\\" Type=\\"Choice\\" ID=\\"{e5a87c1b-14fe-4a0d-b2a1-69ed51aefe0a}\\" SourceID=\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\" StaticName=\\"Bucket\\" ColName=\\"nvarchar7\\" RowOrdinal=\\"0\\" Version=\\"5\\"><CHOICES><CHOICE>\' + $bucketOptions + \'</CHOICE></CHOICES></Field>\';\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml $fieldXml --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field DisplayName=\\"Assigned to\\" Format=\\"Dropdown\\" IsModern=\\"TRUE\\" List=\\"UserInfo\\" Mult=\\"TRUE\\" Name=\\"AssignedTo\\" Title=\\"AssignedTo\\" Type=\\"UserMulti\\" UserSelectionMode=\\"0\\" UserSelectionScope=\\"0\\" ID=\\"{38a2a5a8-5518-4242-9b9b-760777f5e7ea}\\" SourceID=\\"{50756447-36ab-447e-9b30-859b91aba49d}\\" StaticName=\\"AssignedTo\\" />\' --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field DisplayName=\\"Start date\\" FriendlyDisplayFormat=\\"Disabled\\" Format=\\"DateOnly\\" IsModern=\\"TRUE\\" Name=\\"Startdate\\" Title=\\"Start date\\" Type=\\"DateTime\\" ID=\\"{91ff7e76-118b-49e1-85dd-afda84856e96}\\" SourceID=\\"{50756447-36ab-447e-9b30-859b91aba49d}\\" StaticName=\\"Startdate\\" ColName=\\"datetime1\\" RowOrdinal=\\"0\\" />\' --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field DisplayName=\\"Due date\\" FriendlyDisplayFormat=\\"Disabled\\" Format=\\"DateOnly\\" IsModern=\\"TRUE\\" Name=\\"Duedate\\" Title=\\"Due date\\" Type=\\"DateTime\\" ID=\\"{23f7955a-1b1b-46f9-8b0f-316dbb37b63e}\\" SourceID=\\"{50756447-36ab-447e-9b30-859b91aba49d}\\" StaticName=\\"Duedate\\" ColName=\\"datetime2\\" RowOrdinal=\\"0\\" />\' --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field AppendOnly=\\"FALSE\\" DisplayName=\\"Checklist\\" Format=\\"Dropdown\\" IsModern=\\"TRUE\\" IsolateStyles=\\"TRUE\\" Name=\\"Checklist\\" RichText=\\"TRUE\\" RichTextMode=\\"FullHtml\\" Title=\\"Checklist\\" Type=\\"Note\\" ID=\\"{05f7b70d-eb7c-4428-afe6-ca9f2f22c5af}\\" SourceID=\\"{50756447-36ab-447e-9b30-859b91aba49d}\\" StaticName=\\"Checklist\\" ColName=\\"ntext2\\" RowOrdinal=\\"0\\" CustomFormatter=\\"\\" Required=\\"FALSE\\" EnforceUniqueValues=\\"FALSE\\" Indexed=\\"FALSE\\" NumLines=\\"6\\" RestrictedMode=\\"TRUE\\" Version=\\"1\\" />\' --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field AppendOnly=\\"FALSE\\" DisplayName=\\"Description\\" Format=\\"Dropdown\\" IsModern=\\"TRUE\\" IsolateStyles=\\"FALSE\\" Name=\\"Description\\" RichText=\\"FALSE\\" RichTextMode=\\"Compatible\\" Title=\\"Description\\" Type=\\"Note\\" ID=\\"{50d7e60e-ce7d-4428-afe6-ca9f2f22c5ce}\\" SourceID=\\"{50756447-36ab-447e-9b30-859b91aba49d}\\" StaticName=\\"Description\\" ColName=\\"ntext2\\" RowOrdinal=\\"0\\" />\' --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field Type=\\"Number\\" DisplayName=\\"Priority\\" Required=\\"FALSE\\" EnforceUniqueValues=\\"FALSE\\" Indexed=\\"FALSE\\" ID=\\"{a9639335-a3cf-41d2-a1fb-28d02c8ef09f}\\" SourceID=\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\" StaticName=\\"Priority\\" Name=\\"Priority\\" ColName=\\"float1\\" RowOrdinal=\\"0\\" CustomFormatter=\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-backgroundColor-BgRed sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-backgroundColor-BgPeach sp-css-borderColor-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-backgroundColor-BgGold&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-backgroundColor-BgMintGreen sp-css-borderColor-MintGreenFont&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;RingerSolid&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;Important&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;LocationDot&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;Down&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,&quot;&quot;]}]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 1, \'\'Urgent\'\', if(@currentField == 3, \'\'Important\'\', if(@currentField == 5, \'\'Medium\'\', if(@currentField == 9, \'\'\'\', \'\'Low\'\'))))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,0]},9,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}}]}]}\\" Version=\\"23\\" />\'  --options AddToAllContentTypes\n            $field = m365 spo field add --webUrl $SiteUrl --listTitle $list.title --xml \'<Field CommaSeparator=\\"TRUE\\" CustomUnitOnRight=\\"TRUE\\" DisplayName=\\"Progress\\" Format=\\"Dropdown\\" IsModern=\\"TRUE\\" Name=\\"Progress\\" Percentage=\\"FALSE\\" Title=\\"Progress\\" Type=\\"Number\\" Unit=\\"None\\" ID=\\"{abea0d9d-83b8-4d57-9c68-8b56ad4066c9}\\" SourceID=\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\" StaticName=\\"Progress\\" ColName=\\"float2\\" RowOrdinal=\\"0\\" CustomFormatter=\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-backgroundColor-BgLightGray sp-css-borderColor-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-backgroundColor-BgGold sp-css-borderColor-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-backgroundColor-BgGreen sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;CircleRing&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;CircleHalfFull&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;CircleFill&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 100, \'\'Completed\'\', if(@currentField == 50, \'\'Completed\'\', if(@currentField == 0, \'\'Not started\'\', \'\'\'\')))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-field-fontSizeSmall sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-field-fontSizeSmall sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-field-fontSizeSmall sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}}]}]}\\" Version=\\"2\\" />\' --options AddToAllContentTypes\n\n            $viewName = "All Items"\n            $viewFields = @("Progress", "Priority", "Assigned_x0020_to", "Due date", "Start date");\n            foreach ($field in $viewFields) {\n                m365 spo list view field add --webUrl $SiteUrl --listTitle $list.title --viewTitle $viewName --title $field\n            }\n            $view = m365 spo list view set --webUrl $SiteUrl --listTitle $list.title --title $viewName --ViewQuery \'<GroupBy Collapse=\\"TRUE\\" GroupLimit=\\"30\\"><FieldRef Name=\\"Bucket\\" /></GroupBy><OrderBy><FieldRef Name=\\"ID\\" /></OrderBy>\'\n            $view = m365 spo list view set --webUrl $SiteUrl --listTitle $list.title --title $viewName --ViewType2 "TILES"\n        }\n\n        Write-Host "Migrating tasks"\n\n        foreach ($migrationTask in $migrationTasks) {\n            $i++\n            if ($ShowProgress) { Write-Host "Processing ($i/$($migrationTasks.length))" }\n\n            $newItem = m365 spo listitem add --webUrl $SiteUrl --listTitle $plan.title --Title $migrationTask.Title --Bucket $migrationTask.Bucket --Progress $migrationTask.Progress --Description $migrationTask.Description --Assigned_x0020_to $migrationTask.AssignedTo --Priority $migrationTask.Priority | ConvertFrom-Json -AsHashtable\n\n            # Fails with an empty date so extra check to prevent issues\n            if ($migrationTask.StartDate) {\n                $updatedItem = m365 spo listitem set --webUrl $SiteUrl --listTitle $plan.title --id $newItem.Id --Start_x0020_date $migrationTask.StartDate\n            }\n            if ($migrationTask.DueDate) {\n                $updatedItem = m365 spo listitem set --webUrl $SiteUrl --listTitle $plan.title --id $newItem.Id --Due_x0020_date $migrationTask.DueDate\n            }\n            if ($migrationTask.Checklist) {\n                $updatedItem = m365 spo listitem set --webUrl $SiteUrl --listTitle $plan.title --id $newItem.Id --Checklist $migrationTask.Checklist\n            }\n        }\n        \n        Write-Host "Migrating finished for the plan $($plan.title)"\n    } else {\n        Write-Host "Skipping migrating due to lack of tasks"\n    }\n}\n')))))}m.isMDXComponent=!0}}]);