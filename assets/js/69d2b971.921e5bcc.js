"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[37482],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var m=n.createContext({}),l=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(m.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,m=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(r),d=s,f=p["".concat(m,".").concat(d)]||p[d]||u[d]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=d;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42545:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(87462),s=(r(67294),r(3905));const a={tags:["teams"]},o="List all Microsoft Teams team's Owners and Members",i={unversionedId:"sample-scripts/teams/list-teams-owners-and-members/index",id:"sample-scripts/teams/list-teams-owners-and-members/index",title:"List all Microsoft Teams team's Owners and Members",description:"Author: Patrick Lamber",source:"@site/docs/sample-scripts/teams/list-teams-owners-and-members/index.md",sourceDirName:"sample-scripts/teams/list-teams-owners-and-members",slug:"/sample-scripts/teams/list-teams-owners-and-members/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/list-teams-owners-and-members/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/teams/list-teams-owners-and-members/index.md",tags:[{label:"teams",permalink:"/cli-microsoft365-docusaurus/tags/teams"}],version:"current",lastUpdatedBy:"Jwaegebaert",lastUpdatedAt:1672784370,formattedLastUpdatedAt:"Jan 3, 2023",frontMatter:{tags:["teams"]},sidebar:"sampleScripts",previous:{title:"List Microsoft Teams teams, channels, and tabs in the tenant",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/list-teams-channels-tabs-for-tenant/"},next:{title:"Recognize most active users for a specific Team",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/recognize-most-active-users-specific-team/"}},m={},l=[],c={toc:l};function p(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"list-all-microsoft-teams-teams-owners-and-members"},"List all Microsoft Teams team's Owners and Members"),(0,s.kt)("p",null,"Author: ",(0,s.kt)("a",{parentName:"p",href:"https://www.nubo.eu/List-All-Microsoft-Teams-Owners-And-Members/"},"Patrick Lamber")),(0,s.kt)("p",null,"This script allows you to list all Teams team's owners and members and export them into a CSV file. This script is inspired by ",(0,s.kt)("a",{parentName:"p",href:"https://dailysysadmin.com/KB/Article/3607/microsoft-teams-powershell-commands-to-list-all-members-and-owners/"},"Robin Clarke"),"."),(0,s.kt)("p",null,'=== "PowerShell"'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'```powershell\n$fileExportPath = "<PUTYOURPATHHERE.csv>"\n# process teams that you have joined only\n$joined = $false\n\n$m365Status = m365 status --output text\n\nif ($m365Status -eq "Logged Out") {\n  # Connection to Microsoft 365\n  m365 login\n}\n\n# configure the CLI to output JSON on each execution\nm365 cli config set --key output --value json\n\n$exportData = @()\n$teams = m365 teams team list --joined $joined | ConvertFrom-Json\n# you can use the next line if you already know the GroupId/TeamId\n#$teams = @(m365 teams team get --id $teamId | ConvertFrom-Json)\n\n$i = 0\n$teams | ForEach-Object {\n  $team = $_\n  $i++\n  Write-Host "Processing Team \'$($team.displayName)\' - ($i/$($teams.length))"\n  $owners = $null\n  $owners = m365 teams user list --teamId $team.id --role Owner --query "[].userPrincipalName" | ConvertFrom-Json\n  $members = $null\n  $members = m365 teams user list --teamId $team.id --role Member --query "[].userPrincipalName" | ConvertFrom-Json\n  $exportData += [PSCustomObject]@{ Id = $team.id; DisplayName = $team.displayName; Owners = $owners -join \', \'; Members = $members -join \', \'}\n}\n\nWrite-Host "Exporting file to $fileExportPath..."\n$exportData | Export-Csv -Path $fileExportPath -NoTypeInformation\nWrite-Host "Completed."\n```\n')))}p.isMDXComponent=!0}}]);