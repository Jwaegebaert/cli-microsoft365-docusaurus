"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[29011],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<s;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var a=r(67294),n=r(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,o),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>k});var a=r(87462),n=r(67294),s=r(86010),o=r(12466),i=r(56697),l=r(91980),u=r(67392),c=r(50012);function p(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}function d(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??p(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function h(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,s=d(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[l,u]=f({queryString:r,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(r);return[a,(0,n.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),b=(()=>{const e=l??p;return m({value:e,tabValues:s})?e:null})();(0,n.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,s]),tabValues:s}}var b=r(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:r,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,r=c.indexOf(t),a=u[r].value;a!==i&&(p(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},t)},u.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},o,{className:(0,s.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":i===t})}),r??t)})))}function y(e){let{lazy:t,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=h(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",g.tabList)},n.createElement(v,(0,a.Z)({},e,t)),n.createElement(y,(0,a.Z)({},e,t)))}function k(e){const t=(0,b.Z)();return n.createElement(w,(0,a.Z)({key:String(t)},e))}},80585:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var a=r(87462),n=(r(67294),r(3905)),s=r(74866),o=r(85162);const i={tags:["groups","users","security"]},l="Add users to the Associated SharePoint Groups of a site from a CSV File",u={unversionedId:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index",id:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index",title:"Add users to the Associated SharePoint Groups of a site from a CSV File",description:"Author: Arjun Menon",source:"@site/docs/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index.mdx",sourceDirName:"sample-scripts/spo/add-users-associatedspgroup-site-csv-file",slug:"/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/add-users-associatedspgroup-site-csv-file/index.mdx",tags:[{label:"groups",permalink:"/cli-microsoft365-docusaurus/tags/groups"},{label:"users",permalink:"/cli-microsoft365-docusaurus/tags/users"},{label:"security",permalink:"/cli-microsoft365-docusaurus/tags/security"}],version:"current",lastUpdatedAt:1683150705,formattedLastUpdatedAt:"May 3, 2023",frontMatter:{tags:["groups","users","security"]},sidebar:"sampleScripts",previous:{title:"Add a Site Collection Admin using a csv file",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/add-site-collection-admin-using-csv-file/"},next:{title:"Change group membership of all SharePoint Online sites",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/change-owner-group-membership/"}},c={},p=[{value:"Script Details",id:"script-details",level:2},{value:"File Format",id:"file-format",level:3},{value:"Permission Level Mapping",id:"permission-level-mapping",level:3},{value:"Complete Script",id:"complete-script",level:2}],d={toc:p},m="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"add-users-to-the-associated-sharepoint-groups-of-a-site-from-a-csv-file"},"Add users to the Associated SharePoint Groups of a site from a CSV File"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://arjunumenon.com/add-multiple-users-sharepoint-groups-site/"},"Arjun Menon")),(0,n.kt)("h2",{id:"script-details"},"Script Details"),(0,n.kt)("p",null,"This is a script which adds multiple users to associated SharePoint groups (Owners, Members, Visitors) of a site from a CSV file."),(0,n.kt)("p",null,"Typical use case of the script will be a migration scenario where the contents are migrated, while the permissions are not migrated. In that case you will have a  list of users and its equivalent permission level of the source system. The script sample will read the source permission details from a CSV file and will add the users to the associated SharePoint groups of a site"),(0,n.kt)("h3",{id:"file-format"},"File Format"),(0,n.kt)("p",null,"Below is an example of the format needed for your .csv file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"Username,PermissionLevel\nadelev@contoso.com,Read\nalexw@contoso.com,Owner\nalland@contoso.com,Member\nchristiec@contoso.com,Member\n")),(0,n.kt)("h3",{id:"permission-level-mapping"},"Permission Level Mapping"),(0,n.kt)("p",null,"Permission Level mapping assumptions are given below"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Permission Level"),(0,n.kt)("th",{parentName:"tr",align:null},"Equivalent SharePoint Group"),(0,n.kt)("th",{parentName:"tr",align:null},"Details"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Read"),(0,n.kt)("td",{parentName:"tr",align:null},"Visitors"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Visitors group of the site")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Owner"),(0,n.kt)("td",{parentName:"tr",align:null},"Owners"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Owners group of the site")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Member"),(0,n.kt)("td",{parentName:"tr",align:null},"Member"),(0,n.kt)("td",{parentName:"tr",align:null},"User will be added to the associated Owners group of the site")))),(0,n.kt)("h2",{id:"complete-script"},"Complete Script"),(0,n.kt)(s.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"PowerShell",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'#Check the M365 login status for CLI\n$LoginStatus = m365 status --output text\nif($LoginStatus -Match "Logged out"){\n    #Executing login command for CLI\n    m365 login   \n}\n\n#Set the URL of the site where the users need to be added\n$siteURL = "https://aum365.sharepoint.com/sites/M365CLI"\n\n#Getting the Associated Groups for the specific site\n$SiteInformation = m365 spo web get --webUrl $siteURL --withGroups --output json | ConvertFrom-Json\n\n#Importing the Current permission list from CSV. Adding the equivalent SharePoint Group Id to the imported object.\n#Object will be grouped with multiple users with , seperator since CLI supports adding multiple users in a single command\n$GroupedResult = Import-Csv -Path .\\Current-Permission-Migration.csv | Group-Object PermissionLevel | ForEach-Object {\n[PsCustomObject]@{\n    PermissionLevel = $_.Name\n    UsernameValues = $_.Group.Username -join \', \'\n    SPGroupId = switch ($_.Name){\n        "Read" {"$($SiteInformation.AssociatedVisitorGroup.Id)"}#Adding to the default Visitor\'s Group\n        "Member" {"$($SiteInformation.AssociatedMemberGroup.Id)"}#Adding to the default Member\'s Group\n        "Owner" {"$($SiteInformation.AssociatedOwnerGroup.Id)"}#Adding to the default Owner\'s Group\n        default {"$($SiteInformation.AssociatedVisitorGroup.Id)"}\n        }\n    }\n}\n\n#Show the Formatted data table for reference\n$GroupedResult | Format-Table\n\n#Read Grouped Permission level and users and add the users to the SharePoint Groups\nForeach ($PermissionLevel in $GroupedResult) {\n    Write-Host "Adding $($PermissionLevel.PermissionLevel) Permission users to the SharePoint Group ID: $($PermissionLevel.SPGroupId)"\n    #Since the command supports multiple usernames to be added in the single command, script will add users in single command execution\n    m365 spo group member add --webUrl $siteURL --groupId $PermissionLevel.SPGroupId --userName $PermissionLevel.UsernameValues\n}\n')))))}f.isMDXComponent=!0}}]);