"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[71753],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=o,f=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return r?n.createElement(f,a(a({ref:t},m),{},{components:r})):n.createElement(f,a({ref:t},m))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},94771:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const i={tags:["libraries","files"]},a="Insert pictures in a SharePoint Document Library into a Word document",s={unversionedId:"sample-scripts/spo/insert-sp-library-pictures-into-word/index",id:"sample-scripts/spo/insert-sp-library-pictures-into-word/index",title:"Insert pictures in a SharePoint Document Library into a Word document",description:"Author: Joseph Velliah",source:"@site/docs/sample-scripts/spo/insert-sp-library-pictures-into-word/index.md",sourceDirName:"sample-scripts/spo/insert-sp-library-pictures-into-word",slug:"/sample-scripts/spo/insert-sp-library-pictures-into-word/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/insert-sp-library-pictures-into-word/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/insert-sp-library-pictures-into-word/index.md",tags:[{label:"libraries",permalink:"/cli-microsoft365-docusaurus/tags/libraries"},{label:"files",permalink:"/cli-microsoft365-docusaurus/tags/files"}],version:"current",lastUpdatedAt:1677877396,formattedLastUpdatedAt:"Mar 3, 2023",frontMatter:{tags:["libraries","files"]},sidebar:"sampleScripts",previous:{title:"Hide SharePoint list from Site Contents",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/hide-list-from-site-contents/"},next:{title:"List all application customizers in a tenant",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/list-all-application-customizers/"}},l={},c=[],m={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"insert-pictures-in-a-sharepoint-document-library-into-a-word-document"},"Insert pictures in a SharePoint Document Library into a Word document"),(0,o.kt)("p",null,"Author: ",(0,o.kt)("a",{parentName:"p",href:"https://sprider.blog/insert-pictures-in-a-sharepoint-document-library-into-a-word-document"},"Joseph Velliah")),(0,o.kt)("p",null,"This PowerShell script shows how to download and insert many pictures in a SharePoint Document Library into a Word document in a two-column table with file name using CLI for Microsoft 365 commands and PowerShell Script."),(0,o.kt)("p",null,"Customers have multiple pictures in a SharePoint Document Library, and they need to automatically insert the pictures in Word as it will take a lot of time if operating from UI. So, they need a script to accomplish that."),(0,o.kt)("p",null,"Prerequisites:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Windows 10 or higher"),(0,o.kt)("li",{parentName:"ul"},"Windows PowerShell"),(0,o.kt)("li",{parentName:"ul"},"CLI for Microsoft 365"),(0,o.kt)("li",{parentName:"ul"},"Office 2007 or Higher version"),(0,o.kt)("li",{parentName:"ul"},"SharePoint Online Site"),(0,o.kt)("li",{parentName:"ul"},"Document Library with some images"),(0,o.kt)("li",{parentName:"ul"},"Folder to download the images"),(0,o.kt)("li",{parentName:"ul"},"Blank Word document to add the images")),(0,o.kt)("p",null,'=== "PowerShell"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'```powershell\nWrite-Host "Execution started"\n\n$imagesDownloadFolderPath = "C:\\Users\\username\\Downloads\\Temp\\images"\n$targetWordDocumentPath = "C:\\Users\\username\\Downloads\\Temp\\output\\word-document-name.docx"\n\n$siteUrl = "https://tenant-name.sharepoint.com/sites/site-name"\n$docLibRootFolderName = "Shared Documents"\n\n# assumption - folder contains only images but feel free to change the filter conditions to limit the items/file types returned from document library\n$spolImagesCollection = m365 spo file list --webUrl $siteUrl --folder $docLibRootFolderName -o json | ConvertFrom-Json\n\nif ($spolImagesCollection.Count -gt 0) {\n  $numberOfRows = $spolImagesCollection.Count\n  $numberOfColumns = 2\n\n  $wordClient = New-Object -comobject word.application\n  $wordClient.Visible = $false\n  $wordDoc = $wordClient.Documents.Add()\n  $range = $wordDoc.Range()\n  $wordDoc.Tables.Add($range, $numberOfRows, $numberOfColumns) | Out-Null\n\n  $table = $wordDoc.Tables.item(1)\n  $table.Cell(1, 1).Range.Text = "File Name" # column 1 heading\n  $table.Cell(1, 2).Range.Text = "Image" # column 2 heading 1\n\n  $rowNumber = 2 # to insert the images from second row\n\n  ForEach ($spolImage in $spolImagesCollection) {\n    $targetFilePath = Join-Path $imagesDownloadFolderPath $spolImage.Name\n    $docServerRelativeUrl = $spolImage.ServerRelativeUrl\n\n    Write-Host "Processing: $docServerRelativeUrl"\n\n    m365 spo file get --webUrl $siteUrl --url $docServerRelativeUrl --asFile --path $targetFilePath\n    Write-Host "File downloaded: " $docServerRelativeUrl\n\n    $table.Cell($rowNumber, 1).Range.Text = $spolImage.Name\n    $table.Cell($rowNumber, 2).Range.InlineShapes.AddPicture($targetFilePath) | Out-Null\n    Write-Host "Added image in temp document table row " $rowNumber\n\n    $rowNumber++\n  }\n\n  [ref]$saveFormat = "microsoft.office.interop.word.WdSaveFormat" -as [type]\n  $wordDoc.saveas([ref] $targetWordDocumentPath, [ref]$saveFormat::wdFormatDocumentDefault)\n  $wordDoc.close()\n  $wordClient.quit()\n\n  [System.Runtime.Interopservices.Marshal]::ReleaseComObject($wordDoc) | Out-Null\n  [System.Runtime.Interopservices.Marshal]::ReleaseComObject($wordClient) | Out-Null\n  [System.Runtime.Interopservices.Marshal]::ReleaseComObject($range) | Out-Null\n  [System.Runtime.Interopservices.Marshal]::ReleaseComObject($table) | Out-Null\n  Remove-Variable wordDoc, wordClient, range, table\n  [gc]::collect()\n  [gc]::WaitForPendingFinalizers()\n\n  Write-Host "Open the document located in $targetWordDocumentPath and check the images in the table"\n}\nelse {\n  Write-Host "No files in this document library"\n}\n\nWrite-Host "Execution completed"\n```\n')))}u.isMDXComponent=!0}}]);