"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[25602],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||s;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:n},t)}},74866:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(87462),r=n(67294),s=n(86010),o=n(12466),l=n(56697),i=n(91980),c=n(67392),u=n(50012);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[i,c]=f({queryString:n,groupId:a}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=i??m;return d({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),h(e)}),[c,h,s]),tabValues:s}}var g=n(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(m(t),i(a))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:p},o,{className:(0,s.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function $(e){const t=h(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",b.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function C(e){const t=(0,g.Z)();return r.createElement($,(0,a.Z)({key:String(t)},e))}},5304:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),s=n(74866),o=n(85162);const l={tags:["migration","teams"]},i="Export conversations from Microsoft Teams Channels",c={unversionedId:"sample-scripts/teams/export-teams-conversations/index",id:"sample-scripts/teams/export-teams-conversations/index",title:"Export conversations from Microsoft Teams Channels",description:"Author: Joseph Velliah",source:"@site/docs/sample-scripts/teams/export-teams-conversations/index.mdx",sourceDirName:"sample-scripts/teams/export-teams-conversations",slug:"/sample-scripts/teams/export-teams-conversations/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/export-teams-conversations/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/teams/export-teams-conversations/index.mdx",tags:[{label:"migration",permalink:"/cli-microsoft365-docusaurus/tags/migration"},{label:"teams",permalink:"/cli-microsoft365-docusaurus/tags/teams"}],version:"current",lastUpdatedAt:1685025201,formattedLastUpdatedAt:"May 25, 2023",frontMatter:{tags:["migration","teams"]},sidebar:"sampleScripts",previous:{title:"Export all channels in Microsoft Teams teams in the tenant",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/export-all-channels-teams/"},next:{title:"Get all the Teams a specific user is part of",permalink:"/cli-microsoft365-docusaurus/sample-scripts/teams/get-all-teams-specific-user-is-part-of/"}},u={},m=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Solution",id:"solution",level:3}],p={toc:m},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"export-conversations-from-microsoft-teams-channels"},"Export conversations from Microsoft Teams Channels"),(0,r.kt)("p",null,"Author: ",(0,r.kt)("a",{parentName:"p",href:"https://sprider.blog/export-conversations-from-microsoft-teams"},"Joseph Velliah")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"We utilize Teams during incidents and create channels for each. We would like to be able to export conversation history."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"right now the only option we have is to go through Security & Compliance."),(0,r.kt)("li",{parentName:"ul"},"Teams usage is growing in every organization and it would soon become unreasonably to only have Administrators be the ones doing exports of channels for all the Teams.")),(0,r.kt)("h3",{id:"solution"},"Solution"),(0,r.kt)("p",null,"This script uses CLI for Microsoft 365 to export the conversations from Microsoft Teams Channels. You don't need to be a tenant admin to export conversations but you still can only export conversations of Teams of which you are member."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Commands ",(0,r.kt)("inlineCode",{parentName:"p"},"m365 teams message list")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"m365 teams message reply list")," are based on an API that is currently in preview and is subject to change once the API reached general availability.")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"PowerShell",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'function  Get-Teams {\n  $teams = m365 teams team list -o json | ConvertFrom-Json -AsHashtable\n  return $teams\n}\nfunction  Get-Channels {\n  param (\n    [Parameter(Mandatory = $true)] [string] $teamId\n  )\n  $channels = m365 teams channel list --teamId $teamId -o json | ConvertFrom-Json -AsHashtable\n  return $channels\n}\nfunction  Get-Messages {\n  param (\n    [Parameter(Mandatory = $true)] [string] $teamId,\n    [Parameter(Mandatory = $true)] [string] $channelId\n  )\n  $messages = m365 teams message list --teamId $teamId --channelId $channelId -o json | ConvertFrom-Json -AsHashtable\n  return $messages\n}\nfunction  Get-MessageReplies {\n  param (\n    [Parameter(Mandatory = $true)] [string] $teamId,\n    [Parameter(Mandatory = $true)] [string] $channelId,\n    [Parameter(Mandatory = $true)] [string] $messageId\n  )\n\n  $messageReplies = m365 teams message reply list --teamId $teamId --channelId $channelId --messageId $messageId -o json | ConvertFrom-Json -AsHashtable\n  return $messageReplies\n}\n\nTry {\n  $teamsCollection = [System.Collections.ArrayList]@()\n  $teams = Get-Teams\n  $progressCountTeam = 1;\n  foreach ($team in $teams) {\n    Write-Progress -Id 0 -Activity "Processing channels in Team : $($team.displayName)" -Status "Team $progressCountTeam of $($teams.length)" -PercentComplete (($progressCountTeam / $teams.length) * 100)\n    $channelsCollection = [System.Collections.ArrayList]@()\n    $channels = Get-Channels $team.id\n    $progressCountChannel = 1;\n    foreach ($channel in $channels) {\n      Write-Progress -Id 1 -ParentId 0 -Activity "Processing messages in channel : $($channel.displayName)" -Status "Channel $progressCountChannel of $($channels.length)" -PercentComplete (($progressCountChannel / $channels.length) * 100)\n      $messages = Get-Messages $team.id $channel.id\n      $messagesCollection = [System.Collections.ArrayList]@()\n      foreach ($message in $messages) {\n        $messageReplies = Get-MessageReplies $team.id $channel.id $message.id\n        $messageDetails = $message\n        [void]$messageDetails.Add("replies", $messageReplies)\n        [void]$messagesCollection.Add($messageDetails)\n      }\n      $channelDetails = $channel\n      [void]$channelDetails.Add("messages", $messagesCollection)\n      [void]$channelsCollection.Add($channelDetails)\n      $progressCountChannel++\n    }\n    $teamDetails = $team\n    [void]$teamDetails.Add("channels", $channelsCollection)\n    [void]$teamsCollection.Add($teamDetails)\n    $progressCountTeam++\n  }\n  Write-Progress -Id 0 -Activity " " -Status " " -Completed\n  Write-Progress -Id 1 -Activity " " -Status " " -Completed\n  $output = @{}\n  [void]$output.Add("teams", $teamsCollection)\n  $executionDir = $PSScriptRoot\n  $outputFilePath = "$executionDir/$(get-date -f yyyyMMdd-HHmmss).json"\n  # ConvertTo-Json cuts off data when exporting to JSON if it nests too deep. The default value of Depth parameter is 2. Set your -Depth parameter whatever depth you need to preserve your data.\n  $output | ConvertTo-Json -Depth 100 | Out-File $outputFilePath \n  Write-Host "Open $outputFilePath file to review your output" -F Green \n}\nCatch {\n  $ErrorMessage = $_.Exception.Message\n  Write-Error $ErrorMessage\n}\n')))))}f.isMDXComponent=!0}}]);