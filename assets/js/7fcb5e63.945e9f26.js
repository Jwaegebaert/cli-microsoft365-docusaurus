"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[76586],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>g});var r=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function s(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?s(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)i=s[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)i=s[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=p(i),m=n,g=f["".concat(o,".").concat(m)]||f[m]||u[m]||s;return i?r.createElement(g,l(l({ref:t},c),{},{components:i})):r.createElement(g,l({ref:t},c))}));function g(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=i.length,l=new Array(s);l[0]=m;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a[f]="string"==typeof e?e:n,l[1]=a;for(var p=2;p<s;p++)l[p]=i[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}m.displayName="MDXCreateElement"},39279:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var r=i(87462),n=(i(67294),i(3905));const s={tags:["files","reports"]},l="List all large files within a SharePoint Site",a={unversionedId:"sample-scripts/spo/list-large-files-within-a-site/index",id:"sample-scripts/spo/list-large-files-within-a-site/index",title:"List all large files within a SharePoint Site",description:"Author: Veronique Lengelle",source:"@site/docs/sample-scripts/spo/list-large-files-within-a-site/index.md",sourceDirName:"sample-scripts/spo/list-large-files-within-a-site",slug:"/sample-scripts/spo/list-large-files-within-a-site/",permalink:"/sample-scripts/spo/list-large-files-within-a-site/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/list-large-files-within-a-site/index.md",tags:[{label:"files",permalink:"/tags/files"},{label:"reports",permalink:"/tags/reports"}],version:"current",lastUpdatedBy:"Jwaegebaert",lastUpdatedAt:1672784370,formattedLastUpdatedAt:"Jan 3, 2023",frontMatter:{tags:["files","reports"]},sidebar:"sampleScripts",previous:{title:"List all failed site design for all sites",permalink:"/sample-scripts/spo/list-failed-sitedesigns/"},next:{title:"Lists active SharePoint site collection application catalogs",permalink:"/sample-scripts/spo/list-site-app-catalogs/"}},o={},p=[],c={toc:p};function f(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"list-all-large-files-within-a-sharepoint-site"},"List all large files within a SharePoint Site"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://veronicageek.com/2019/get-files-bigger-50mb/"},"Veronique Lengelle")),(0,n.kt)("p",null,"The following script will help you find every files in a specific SharePoint Online site that are over a certain size. It iterates through all libraries and identifies all files larger than the set threshold."),(0,n.kt)("p",null,'=== "PowerShell"'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'```powershell\nparam (\n    [Parameter(Mandatory = $true, HelpMessage = "URL of the target site", Position = 0)]\n    [string]$SiteUrl,\n    [Parameter(Mandatory = $true, HelpMessage = "Size in MB", Position = 1)]\n    [int]$SizeInMB,\n    [Parameter(HelpMessage = "Show progress messages", Position = 2)]\n    [switch]$ShowProgress\n)\n\n$m365Status = m365 status --output text\n\nif ($m365Status -eq "Logged Out") {\n  # Connection to Microsoft 365\n  m365 login\n}\n\n#Declare variables\n$site = $SiteUrl\n$results = @()\n$allLibs = m365 spo list list --webUrl $site --query "[?BaseTemplate == ``101``]" -o json | ConvertFrom-Json\n\nforeach ($lib in $allLibs) {\n    # Counters\n    $i++\n    if ($ShowProgress) { Write-Host "Processing \'$($lib.Title)\' - ($i/$($allLibs.length))" }\n\n    $allFiles = m365 spo file list --webUrl $site --folder $lib.Url --recursive -o json | ConvertFrom-Json\n\n    foreach ($file in $allFiles) {\n        if ($ShowProgress) { Write-Host "Processing file \'$($file.ServerRelativeUrl)\'" }\n\n        #Cast as [long] in case some are above 1GB\n        $fileSizeToNum = [long]($file.Length)\n\n        if (($fileSizeToNum -ge ($SizeInMB * 1000000)) -and ($file.name -like "*.*")) {\n            $results += [pscustomobject]@{\n                libraryName      = $lib.Title\n                fileName         = $file.Name\n                filePath         = $file.ServerRelativeUrl\n                normalSize       = $file.Length\n                SizeInMB         = ($fileSizeToNum / 1MB).ToString("N")\n                LastModifiedDate = [DateTime]$file.TimeLastModified\n            }\n        }\n    }\n}\n\n$results\n```\n')))}f.isMDXComponent=!0}}]);