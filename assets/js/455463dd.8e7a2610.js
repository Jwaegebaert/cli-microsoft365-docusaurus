"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[23430],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,s=e.originalType,i=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(r),f=l,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||s;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var s=r.length,o=new Array(s);o[0]=f;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[p]="string"==typeof e?e:l,o[1]=a;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(67294),l=r(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(s.tabItem,o),hidden:r},t)}},74866:(e,t,r)=>{r.d(t,{Z:()=>$});var n=r(87462),l=r(67294),s=r(86010),o=r(12466),a=r(56697),i=r(91980),u=r(67392),c=r(50012);function p(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:l}}=e;return{value:t,label:r,attributes:n,default:l}}))}function d(e){const{values:t,children:r}=e;return(0,l.useMemo)((()=>{const e=t??p(r);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function f(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const n=(0,a.k6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,i._X)(s),(0,l.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function b(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=d(e),[o,a]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[i,u]=m({queryString:r,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,c.Nk)(r);return[n,(0,l.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),h=(()=>{const e=i??p;return f({value:e,tabValues:s})?e:null})();(0,l.useLayoutEffect)((()=>{h&&a(h)}),[h]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var h=r(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:r,selectedValue:a,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,r=c.indexOf(t),n=u[r].value;n!==a&&(p(t),i(n))},f=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},t)},u.map((e=>{let{value:t,label:r,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,key:t,ref:e=>c.push(e),onKeyDown:f,onClick:d},o,{className:(0,s.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":a===t})}),r??t)})))}function g(e){let{lazy:t,children:r,selectedValue:n}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=b(e);return l.createElement("div",{className:(0,s.Z)("tabs-container",v.tabList)},l.createElement(y,(0,n.Z)({},e,t)),l.createElement(g,(0,n.Z)({},e,t)))}function $(e){const t=(0,h.Z)();return l.createElement(w,(0,n.Z)({key:String(t)},e))}},38515:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var n=r(87462),l=(r(67294),r(3905)),s=r(74866),o=r(85162);const a={tags:["files","libraries","reports"]},i="Lists number of files in all lists and folders for the given site",u={unversionedId:"sample-scripts/spo/list-all-list-folders-itemcount/index",id:"sample-scripts/spo/list-all-list-folders-itemcount/index",title:"Lists number of files in all lists and folders for the given site",description:"Author: Albert-Jan Schot",source:"@site/docs/sample-scripts/spo/list-all-list-folders-itemcount/index.mdx",sourceDirName:"sample-scripts/spo/list-all-list-folders-itemcount",slug:"/sample-scripts/spo/list-all-list-folders-itemcount/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/list-all-list-folders-itemcount/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/list-all-list-folders-itemcount/index.mdx",tags:[{label:"files",permalink:"/cli-microsoft365-docusaurus/tags/files"},{label:"libraries",permalink:"/cli-microsoft365-docusaurus/tags/libraries"},{label:"reports",permalink:"/cli-microsoft365-docusaurus/tags/reports"}],version:"current",lastUpdatedAt:1683143859,formattedLastUpdatedAt:"May 3, 2023",frontMatter:{tags:["files","libraries","reports"]},sidebar:"sampleScripts",previous:{title:"List all items with unique permissions",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/list-all-items-with-unique-permissions/"},next:{title:"List Attachment Names From SharePoint Lists For A Site",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/list-attachment-names-from-spo-lists/"}},c={},p=[],d={toc:p},f="wrapper";function m(e){let{components:t,...r}=e;return(0,l.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"lists-number-of-files-in-all-lists-and-folders-for-the-given-site"},"Lists number of files in all lists and folders for the given site"),(0,l.kt)("p",null,"Author: ",(0,l.kt)("a",{parentName:"p",href:"https://www.cloudappie.nl/lists-file-count-cli-microsoft-365/"},"Albert-Jan Schot")),(0,l.kt)("p",null,"List all Lists, the folders and sub folders in a given site, and output the item count. Each folder is processed recursively. By default only non hidden document libraries are processed. As specified with the filter ",(0,l.kt)("inlineCode",{parentName:"p"},'$false -eq $list.Hidden -and $list.BaseTemplate -eq "101"'),". The output is a CSV that contains the itemcount for each list and folder found in the specified site collection."),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"PowerShell",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},'$siteUrl = "<PUTYOURURLHERE>"\n$fileExportPath = "<PUTYOURPATHHERE.csv>"\n\n$m365Status = m365 status --output text\n\nif ($m365Status -eq "Logged Out") {\n  # Connection to Microsoft 365\n  m365 login\n}\n\n[System.Collections.ArrayList]$results = @()\n\nfunction Get-Folders($webUrl, $folderUrl) {\n  $folders = m365 spo folder list -u $webUrl --parentFolderUrl $folderUrl -o json | ConvertFrom-Json\n\n  foreach ($folder in $folders) {\n    $folderStats = m365 spo folder get -u $webUrl --f $folder.ServerRelativeUrl -o json | ConvertFrom-Json\n\n    Write-Output "Processing folder: $($folder.ServerRelativeUrl);"\n    [void]$results.Add([pscustomobject]@{ Url = $folder.ServerRelativeUrl; ItemCount = $folderStats.ItemCount; Type = "Folder"; })\n\n    Get-Folders $webUrl $folder.ServerRelativeUrl\n  }\n}\n\n$allLists = m365 spo list list -u $siteUrl -o json | ConvertFrom-Json\n\nforeach ($list in $allLists) {\n  if ($false -eq $list.Hidden -and $list.BaseTemplate -eq "101") {\n    Write-Output "Processing $($list.Url)"\n    [void]$results.Add([PSCustomObject]@{ Url = $list.Url; ItemCount = $list.ItemCount; Type = "List"; })\n\n    Get-Folders $siteUrl $list.Url\n  }\n}\n\n$results | Export-Csv -Path $fileExportPath -NoTypeInformation\n')))))}m.isMDXComponent=!0}}]);