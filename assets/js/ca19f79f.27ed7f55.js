"use strict";(self.webpackChunkcli_for_microsoft_365_docs=self.webpackChunkcli_for_microsoft_365_docs||[]).push([[24587],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>f});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(o),d=n,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return o?r.createElement(f,l(l({ref:t},p),{},{components:o})):r.createElement(f,l({ref:t},p))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},84973:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(87462),n=(o(67294),o(3905));const a={tags:["azure","files","migration"]},l="Sync SharePoint Document Library Documents with Azure Storage Container",i={unversionedId:"sample-scripts/spo/sync-splib-into-az-storage-container/index",id:"sample-scripts/spo/sync-splib-into-az-storage-container/index",title:"Sync SharePoint Document Library Documents with Azure Storage Container",description:"Author: Joseph Velliah",source:"@site/docs/sample-scripts/spo/sync-splib-into-az-storage-container/index.md",sourceDirName:"sample-scripts/spo/sync-splib-into-az-storage-container",slug:"/sample-scripts/spo/sync-splib-into-az-storage-container/",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/sync-splib-into-az-storage-container/",draft:!1,editUrl:"https://github.com/pnp/cli-microsoft365/blob/main/docs/docs/sample-scripts/spo/sync-splib-into-az-storage-container/index.md",tags:[{label:"azure",permalink:"/cli-microsoft365-docusaurus/tags/azure"},{label:"files",permalink:"/cli-microsoft365-docusaurus/tags/files"},{label:"migration",permalink:"/cli-microsoft365-docusaurus/tags/migration"}],version:"current",lastUpdatedAt:1677877396,formattedLastUpdatedAt:"Mar 3, 2023",frontMatter:{tags:["azure","files","migration"]},sidebar:"sampleScripts",previous:{title:"Setup example site",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/setup-example-site/"},next:{title:"Upload local files and folders to SharePoint Online",permalink:"/cli-microsoft365-docusaurus/sample-scripts/spo/upload-local-files-and-folder/"}},s={},c=[],p={toc:c},u="wrapper";function m(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sync-sharepoint-document-library-documents-with-azure-storage-container"},"Sync SharePoint Document Library Documents with Azure Storage Container"),(0,n.kt)("p",null,"Author: ",(0,n.kt)("a",{parentName:"p",href:"https://sprider.blog/sync-sp-library-with-az-storage-container"},"Joseph Velliah")),(0,n.kt)("p",null,"This PowerShell script shows how to download and sync documents in a SharePoint Document Library into an Azure Storage Container using CLI for Microsoft 365 and Azure CLI commands."),(0,n.kt)("p",null,"Prerequisites:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pnp.github.io/cli-microsoft365/"},"Office 365 CLI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/cli/azure/?view=azure-cli-latest"},"Azure CLI")),(0,n.kt)("li",{parentName:"ul"},"SharePoint Online Site"),(0,n.kt)("li",{parentName:"ul"},"Document Library with documents"),(0,n.kt)("li",{parentName:"ul"},"Azure Storage Container"),(0,n.kt)("li",{parentName:"ul"},"Azure Storage Account Key with required permission to upload documents")),(0,n.kt)("p",null,'=== "PowerShell"'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'```powershell\n$spolHostName = "https://tenant-name.sharepoint.com"\n$spolSiteRelativeUrl = "/sites/site-name"\n$spolDocLibTitle = "document-library-title"\n$azStorageAccountKey = "*****************"\n$azStorageAccountName = "azure-storage-account-name"\n$azStorageContainerName = "azure-storage-container-name"\n$localBaseFolderName = "local-base-folder-name"\n\n$localFileDownloadFolderPath = $PSScriptRoot\n$spolSiteUrl = $spolHostName + $spolSiteRelativeUrl\n\n$spolLibItems = m365 spo listitem list --webUrl $spolSiteUrl --listTitle $spolDocLibTitle --fields \'FileRef,FileLeafRef\' --filter "FSObjType eq 0" -o json | ConvertFrom-Json\n\nif ($spolLibItems.Count -gt 0) {\n  ForEach ($spolLibItem in $spolLibItems) {\n    $spolLibFileRelativeUrl = $spolLibItem.FileRef\n    $spolFileName = $spolLibItem.FileLeafRef\n\n    $spolLibFolderRelativeUrl = $spolLibFileRelativeUrl.Substring(0, $spolLibFileRelativeUrl.lastIndexOf(\'/\'))\n\n    $localDownloadFolderPath = Join-Path $localFileDownloadFolderPath $localBaseFolderName $spolLibFolderRelativeUrl\n\n    If (!(test-path $localDownloadFolderPath)) {\n      $message = "Target local folder $localDownloadFolderPath not exist"\n      Write-Host $message -ForegroundColor Yellow\n\n      New-Item -ItemType Directory -Force -Path $localDownloadFolderPath | Out-Null\n\n      $message = "Created target local folder at $localDownloadFolderPath"\n      Write-Host $message -ForegroundColor Green\n    }\n    else {\n      $message = "Target local folder exist at $localDownloadFolderPath"\n      Write-Host $message -ForegroundColor Blue\n    }\n\n    $localFilePath = Join-Path $localDownloadFolderPath $spolFileName\n\n    $message = "Processing SharePoint file $spolFileName"\n    Write-Host $message -ForegroundColor Green\n\n    m365 spo file get --webUrl $spolSiteUrl --url $spolLibFileRelativeUrl --asFile --path $localFilePath\n\n    $message = "Downloaded SharePoint file at $localFilePath"\n    Write-Host $message -ForegroundColor Green\n  }\n\n  $localFolderToSync = Join-Path $localFileDownloadFolderPath $localBaseFolderName\n  az storage blob sync --account-key $azStorageAccountKey --account-name $azStorageAccountName -c $azStorageContainerName -s $localFolderToSync --only-show-errors | Out-Null\n\n  $message = "Syncing local folder $localFolderToSync with Azure Storage Container $azStorageContainerName is completed"\n  Write-Host $message -ForegroundColor Green\n}\nelse {\n  Write-Host "No files in $spolDocLibTitle library" -ForegroundColor Yellow\n}\n```\n')))}m.isMDXComponent=!0}}]);